(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    329962,       7143]
NotebookOptionsPosition[    323550,       6921]
NotebookOutlinePosition[    323894,       6936]
CellTagsIndexPosition[    323851,       6933]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"a1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], ",", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s2", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], ",", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s3", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], ",", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s4", "s"],
         HoldForm]}]}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.49799521728125*^9, 3.497995217765625*^9}, {
   3.497995258796875*^9, 3.497995306046875*^9}, {3.49816798734375*^9, 
   3.498167989671875*^9}, 3.49817051546875*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]}], ",", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]}], ",", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]}], ",", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.497995316265625*^9, 3.49816800553125*^9, 
  3.498170522421875*^9, 3.4986900335*^9, 3.499463609453125*^9, 
  3.499465283671875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.499463613609375*^9, 3.499463621328125*^9}, {
  3.499465289875*^9, 3.49946529575*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s2", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s3", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s4", "s"],
         HoldForm]}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.499463622171875*^9, 3.4994653021875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.499463636984375*^9, 3.49946364671875*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccc}
 \\frac{\\text{s1}}{s} q-q+1 & q \\frac{\\text{s1}}{s} & q \
\\frac{\\text{s1}}{s} &
   q \\frac{\\text{s1}}{s} \\\\
 q \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} q-q+1 & q \
\\frac{\\text{s2}}{s} &
   q \\frac{\\text{s2}}{s} \\\\
 q \\frac{\\text{s3}}{s} & q \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} \
q-q+1 &
   q \\frac{\\text{s3}}{s} \\\\
 q \\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} &
   \\frac{\\text{s4}}{s} q-q+1
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.499463647984375*^9, 3.499465324984375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], ",", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s2", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.49817063309375*^9, 3.49817064434375*^9}, {
  3.4981858075*^9, 3.498185832671875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]}], ",", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FractionBox["s1", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s2", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s3", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s4", "s"],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FractionBox["s1", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s2", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s3", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s4", "s"],
      HoldForm]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.498170646171875*^9, 3.4981858345*^9, 3.4986900349375*^9, 
  3.49946417715625*^9, 3.499465371015625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.499464180578125*^9, 3.4994641874375*^9}, {
  3.499465375328125*^9, 3.49946538059375*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s2", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4994641884375*^9, 3.499465391671875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.499464190703125*^9, 3.499464196953125*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccc}
 \\frac{\\text{s1}}{s} q-q+1 & q \\frac{\\text{s1}}{s} & \
\\frac{\\text{s1}}{s} &
   \\frac{\\text{s1}}{s} \\\\
 q \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} q-q+1 & \
\\frac{\\text{s2}}{s} &
   \\frac{\\text{s2}}{s} \\\\
 q \\frac{\\text{s3}}{s} & q \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} &
   \\frac{\\text{s3}}{s} \\\\
 q \\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s} &
   \\frac{\\text{s4}}{s}
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.49946420803125*^9, 3.49946539803125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a3", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], ",", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s3", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4979839756875*^9, 3.49798398296875*^9}, {
   3.497984048578125*^9, 3.497984057375*^9}, 3.497986407515625*^9, {
   3.49798734921875*^9, 3.4979873513125*^9}, 3.498170713734375*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FractionBox["s1", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s2", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s3", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s4", "s"],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]}], ",", 
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FractionBox["s1", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s2", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s3", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s4", "s"],
      HoldForm]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.497984075078125*^9, 3.497986408359375*^9, {3.4979873520625*^9, 
   3.49531549371875*^9}, 3.498170715046875*^9, 3.498690036140625*^9, 
   3.499464277640625*^9, 3.499465427359375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.49946428*^9, 3.499464287*^9}, {3.499465435359375*^9, 
  3.49946543978125*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s3", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.49946428775*^9, 3.499465442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.49946429575*^9, 3.499464303171875*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccc}
 \\frac{\\text{s1}}{s} q-q+1 & \\frac{\\text{s1}}{s} & q \
\\frac{\\text{s1}}{s} &
   \\frac{\\text{s1}}{s} \\\\
 q \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} & q \\frac{\\text{s2}}{s} &
   \\frac{\\text{s2}}{s} \\\\
 q \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} \
q-q+1 &
   \\frac{\\text{s3}}{s} \\\\
 q \\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} &
   \\frac{\\text{s4}}{s}
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.4994643038125*^9, 3.4994654546875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a4", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], ",", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], ",", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.497984077234375*^9, 3.49798411715625*^9}, 
   3.4979864116875*^9, {3.497987354609375*^9, 3.497987356515625*^9}, 
   3.498170731234375*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "-", "q", "+", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]}], ",", 
     RowBox[{"q", " ", 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FractionBox["s1", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s2", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s3", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s4", "s"],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FractionBox["s1", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s2", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s3", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s4", "s"],
      HoldForm]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TagBox[
      FractionBox["s1", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s2", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s3", "s"],
      HoldForm], ",", 
     TagBox[
      FractionBox["s4", "s"],
      HoldForm]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4979841214375*^9, 3.49798641246875*^9, {3.497987357390625*^9, 
   3.495315494921875*^9}, 3.498170732609375*^9, 3.498690037234375*^9, 
   3.4994643493125*^9, 3.49946547915625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.499464353875*^9, 3.499464359890625*^9}, {
  3.499465490015625*^9, 3.499465494015625*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.499464360859375*^9, 3.499465495078125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.499464363625*^9, 3.499464369140625*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccc}
 \\frac{\\text{s1}}{s} q-q+1 & \\frac{\\text{s1}}{s} & \\frac{\\text{s1}}{s} &
   \\frac{\\text{s1}}{s} \\\\
 q \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} &
   \\frac{\\text{s2}}{s} \\\\
 q \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} &
   \\frac{\\text{s3}}{s} \\\\
 q \\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s} &
   \\frac{\\text{s4}}{s}
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.4994643698125*^9, 3.4994654985625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a0", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.497984749015625*^9, 3.497984765890625*^9}, {
  3.497984815359375*^9, 3.4979848414375*^9}, {3.497987255296875*^9, 
  3.49798726328125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.49798484253125*^9, {3.497987264140625*^9, 3.495315496265625*^9}, 
   3.49869003909375*^9, 3.499541739578125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a16", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "a0", ",", "a0", ",", "a0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a0", ",", "a2", ",", "a0", ",", "a0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a0", ",", "a0", ",", "a3", ",", "a0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a0", ",", "a0", ",", "a0", ",", "a4"}], "}"}]}], "}"}], 
    "]"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.49798484971875*^9, 3.497985057328125*^9}, 
   3.497986291109375*^9, {3.4979873748125*^9, 3.497987376859375*^9}, 
   3.498690049234375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.497987388546875*^9, 3.49798739546875*^9}, {
  3.499542898734375*^9, 3.49954290415625*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s2", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s3", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s4", "s"],
         HoldForm]}]}], "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0"},
     {"0", "0", "0", "0", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s2", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s1", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s3", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "q", "+", 
       RowBox[{"q", " ", 
        TagBox[
         FractionBox["s1", "s"],
         HoldForm]}]}], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s1", "s"],
       HoldForm]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s2", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s2", "s"],
       HoldForm]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s3", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s3", "s"],
       HoldForm]},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"q", " ", 
       TagBox[
        FractionBox["s4", "s"],
        HoldForm]}], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm], 
      TagBox[
       FractionBox["s4", "s"],
       HoldForm]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.497987396375*^9, 3.495315502265625*^9}, 
   3.49817076865625*^9, 3.498690053109375*^9, 3.499541744890625*^9, 
   3.4995429054375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.499541748703125*^9, 3.499541755875*^9}}],

Cell["\<\
\\left(
\\begin{array}{cccccccccccccccc}
 \\frac{\\text{s1}}{s} q-q+1 & q \\frac{\\text{s1}}{s} & q \
\\frac{\\text{s1}}{s} & q \\frac{\\text{s1}}{s} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \
0 & 0 & 0 & 0 & 0 \\\\
 q \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} q-q+1 & q \
\\frac{\\text{s2}}{s} & q \\frac{\\text{s2}}{s} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \
0 & 0 & 0 & 0 & 0 \\\\
 q \\frac{\\text{s3}}{s} & q \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} \
q-q+1 & q \\frac{\\text{s3}}{s} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \
0 \\\\
 q \\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} \
& \\frac{\\text{s4}}{s} q-q+1 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \
\\\\
 0 & 0 & 0 & 0 & \\frac{\\text{s1}}{s} q-q+1 & q \\frac{\\text{s1}}{s} & \
\\frac{\\text{s1}}{s} & \\frac{\\text{s1}}{s} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \
\\\\
 0 & 0 & 0 & 0 & q \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} q-q+1 & \
\\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \
\\\\
 0 & 0 & 0 & 0 & q \\frac{\\text{s3}}{s} & q \\frac{\\text{s3}}{s} & \
\\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \
\\\\
 0 & 0 & 0 & 0 & q \\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} & \
\\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s} & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 \
\\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\text{s1}}{s} q-q+1 & \
\\frac{\\text{s1}}{s} & q \\frac{\\text{s1}}{s} & \\frac{\\text{s1}}{s} & 0 & \
0 & 0 & 0 \\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & q \\frac{\\text{s2}}{s} & \
\\frac{\\text{s2}}{s} & q \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} & 0 & \
0 & 0 & 0 \\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & q \\frac{\\text{s3}}{s} & \
\\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} q-q+1 & \\frac{\\text{s3}}{s} & \
0 & 0 & 0 & 0 \\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & q \\frac{\\text{s4}}{s} & \
\\frac{\\text{s4}}{s} & q \\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s} & 0 & \
0 & 0 & 0 \\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & \\frac{\\text{s1}}{s} q-q+1 \
& \\frac{\\text{s1}}{s} & \\frac{\\text{s1}}{s} & \\frac{\\text{s1}}{s} \\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & q \\frac{\\text{s2}}{s} & \
\\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} & \\frac{\\text{s2}}{s} \\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & q \\frac{\\text{s3}}{s} & \
\\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} & \\frac{\\text{s3}}{s} \\\\
 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & 0 & q \\frac{\\text{s4}}{s} & \
\\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s} & \\frac{\\text{s4}}{s}
\\end{array}
\\right)\
\>", "Output",
 CellChangeTimes->{3.499541756859375*^9, 3.499542913984375*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"p16", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p11", ",", "p12", ",", "p13", ",", "p14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p21", ",", "p22", ",", "p23", ",", "p24"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p31", ",", "p32", ",", "p33", ",", "p34"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"p41", ",", "p42", ",", "p43", ",", "p44"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4979853590625*^9, 3.497985417578125*^9}, {
   3.4979856003125*^9, 3.49798562475*^9}, {3.497988535203125*^9, 
   3.4979885358125*^9}, {3.497988577546875*^9, 3.49798862615625*^9}, 
   3.498690067984375*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dist", "=", 
   RowBox[{"Flatten", "[", "p16", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.497988662859375*^9, 3.497988738109375*^9}, 
   3.498690073765625*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eigendist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s1", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}], ",", 
     RowBox[{"s2", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}], ",", 
     RowBox[{"s3", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}], ",", 
     RowBox[{"s4", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}], ",", 
     RowBox[{"s1", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", 
        RowBox[{"q", " ", "s3"}], "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], ",", 
     RowBox[{"s2", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", 
        RowBox[{"q", " ", "s3"}], "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], ",", 
     RowBox[{"q", " ", 
      RowBox[{"s3", "/", 
       RowBox[{"(", 
        RowBox[{"s1", "+", "s2", "+", 
         RowBox[{"q", " ", "s3"}], "+", 
         RowBox[{"q", " ", "s4"}]}], ")"}]}]}], ",", 
     RowBox[{"q", " ", 
      RowBox[{"s4", "/", 
       RowBox[{"(", 
        RowBox[{"s1", "+", "s2", "+", 
         RowBox[{"q", " ", "s3"}], "+", 
         RowBox[{"q", " ", "s4"}]}], ")"}]}]}], ",", 
     RowBox[{"s1", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", 
        RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], ",", " ", 
     RowBox[{"q", " ", 
      RowBox[{"s2", "/", 
       RowBox[{"(", 
        RowBox[{"s1", "+", 
         RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
         RowBox[{"q", " ", "s4"}]}], ")"}]}]}], ",", 
     RowBox[{"s3", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", 
        RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], ",", 
     RowBox[{"q", " ", 
      RowBox[{"s4", "/", 
       RowBox[{"(", 
        RowBox[{"s1", "+", 
         RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
         RowBox[{"q", " ", "s4"}]}], ")"}]}]}], ",", 
     RowBox[{"s1", "/", 
      RowBox[{"(", 
       RowBox[{"s1", "+", 
        RowBox[{"q", " ", "s2"}], "+", 
        RowBox[{"q", " ", "s3"}], "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], ",", 
     RowBox[{"q", " ", 
      RowBox[{"s2", "/", 
       RowBox[{"(", 
        RowBox[{"s1", "+", 
         RowBox[{"q", " ", "s2"}], "+", 
         RowBox[{"q", " ", "s3"}], "+", 
         RowBox[{"q", " ", "s4"}]}], ")"}]}]}], ",", 
     RowBox[{"q", " ", 
      RowBox[{"s3", "/", 
       RowBox[{"(", 
        RowBox[{"s1", "+", 
         RowBox[{"q", " ", "s2"}], "+", 
         RowBox[{"q", " ", "s3"}], "+", 
         RowBox[{"q", " ", "s4"}]}], ")"}]}]}], ",", 
     RowBox[{"q", " ", 
      RowBox[{"s4", "/", 
       RowBox[{"(", 
        RowBox[{"s1", "+", 
         RowBox[{"q", " ", "s2"}], "+", 
         RowBox[{"q", " ", "s3"}], "+", 
         RowBox[{"q", " ", "s4"}]}], ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.49818665384375*^9, 3.498186796703125*^9}, {
   3.498186845546875*^9, 3.498186891171875*^9}, {3.4981869540625*^9, 
   3.498187006859375*^9}, {3.49819075465625*^9, 3.498190770703125*^9}, 
   3.498690125765625*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.499482144578125*^9, 3.499482152796875*^9}}],

Cell["\<\
\\left\\{\\frac{\\text{s1}}{\\text{s1}+\\text{s2}+\\text{s3}+\\text{s4}},\\\
frac{\\text
   {s2}}{\\text{s1}+\\text{s2}+\\text{s3}+\\text{s4}},\\frac{\\text{s3}}{\\\
text{s1}
   +\\text{s2}+\\text{s3}+\\text{s4}},\\frac{\\text{s4}}{\\text{s1}+\\text{s2}\
+\\tex
   t{s3}+\\text{s4}},\\frac{\\text{s1}}{q \\text{s3}+q
   \\text{s4}+\\text{s1}+\\text{s2}},\\frac{\\text{s2}}{q \\text{s3}+q
   \\text{s4}+\\text{s1}+\\text{s2}},\\frac{q \\text{s3}}{q \\text{s3}+q
   \\text{s4}+\\text{s1}+\\text{s2}},\\frac{q \\text{s4}}{q \\text{s3}+q
   \\text{s4}+\\text{s1}+\\text{s2}},\\frac{\\text{s1}}{q \\text{s2}+q
   \\text{s4}+\\text{s1}+\\text{s3}},\\frac{q \\text{s2}}{q \\text{s2}+q
   \\text{s4}+\\text{s1}+\\text{s3}},\\frac{\\text{s3}}{q \\text{s2}+q
   \\text{s4}+\\text{s1}+\\text{s3}},\\frac{q \\text{s4}}{q \\text{s2}+q
   \\text{s4}+\\text{s1}+\\text{s3}},\\frac{\\text{s1}}{q \\text{s2}+q \
\\text{s3}+q
   \\text{s4}+\\text{s1}},\\frac{q \\text{s2}}{q \\text{s2}+q \\text{s3}+q
   \\text{s4}+\\text{s1}},\\frac{q \\text{s3}}{q \\text{s2}+q \\text{s3}+q
   \\text{s4}+\\text{s1}},\\frac{q \\text{s4}}{q \\text{s2}+q \\text{s3}+q
   \\text{s4}+\\text{s1}}\\right\\}\
\>", "Output",
 CellChangeTimes->{3.499482153578125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seqns", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"s2", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", 
        RowBox[{"q", " ", "s3"}], "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], "\[Equal]", 
     RowBox[{"q", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}], "x2"}]}], ",", 
    RowBox[{
     RowBox[{"s3", 
      RowBox[{"(", 
       RowBox[{"s1", "+", 
        RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], "\[Equal]", 
     RowBox[{"q", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}], "x3"}]}], ",", 
    RowBox[{
     RowBox[{"s4", " ", 
      RowBox[{"(", 
       RowBox[{"s1", "+", 
        RowBox[{"q", 
         RowBox[{"(", 
          RowBox[{"s2", "+", "s3", "+", "s4"}], ")"}]}]}], ")"}]}], 
     "\[Equal]", 
     RowBox[{"q", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}], "x4"}]}], ",", 
    RowBox[{"s1", "==", 
     RowBox[{"q", " ", "x1"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.498232959671875*^9, 3.49823299234375*^9}, {
  3.498233846734375*^9, 3.498233849578125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s2", " ", 
     RowBox[{"(", 
      RowBox[{"s1", "+", "s2", "+", 
       RowBox[{"q", " ", "s3"}], "+", 
       RowBox[{"q", " ", "s4"}]}], ")"}]}], "\[Equal]", 
    RowBox[{"q", " ", 
     RowBox[{"(", 
      RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}], " ", "x2"}]}], 
   ",", 
   RowBox[{
    RowBox[{"s3", " ", 
     RowBox[{"(", 
      RowBox[{"s1", "+", 
       RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
       RowBox[{"q", " ", "s4"}]}], ")"}]}], "\[Equal]", 
    RowBox[{"q", " ", 
     RowBox[{"(", 
      RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}], " ", "x3"}]}], 
   ",", 
   RowBox[{
    RowBox[{"s4", " ", 
     RowBox[{"(", 
      RowBox[{"s1", "+", 
       RowBox[{"q", " ", 
        RowBox[{"(", 
         RowBox[{"s2", "+", "s3", "+", "s4"}], ")"}]}]}], ")"}]}], "\[Equal]", 
    RowBox[{"q", " ", 
     RowBox[{"(", 
      RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}], " ", "x4"}]}], 
   ",", 
   RowBox[{"s1", "\[Equal]", 
    RowBox[{"q", " ", "x1"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.498232996546875*^9, 3.49823385034375*^9, 
  3.49824911403125*^9, 3.49834349584375*^9, 3.498690166578125*^9, 
  3.4994011769375*^9, 3.4994045125*^9, 3.49944010525*^9, 3.49953021721875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R", 
       RowBox[{"(", 
        RowBox[{"s1", "+", "s3"}], ")"}]}], "+", 
      RowBox[{"S", 
       RowBox[{"(", 
        RowBox[{"s2", "+", "s4"}], ")"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}], "-", 
   RowBox[{"q", " ", "c"}]}]}]], "Input",
 CellChangeTimes->{{3.498231647125*^9, 3.498231706125*^9}, {
  3.4982317550625*^9, 3.4982317578125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "c"}], " ", "q"}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"R", " ", 
     RowBox[{"(", 
      RowBox[{"s1", "+", "s3"}], ")"}]}], "+", 
    RowBox[{"S", " ", 
     RowBox[{"(", 
      RowBox[{"s2", "+", "s4"}], ")"}]}]}], 
   RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}]]}]], "Output",
 CellChangeTimes->{
  3.498231708703125*^9, 3.498231758625*^9, 3.498249116609375*^9, 
   3.49834349896875*^9, 3.498690214578125*^9, 3.49940119575*^9, 
   3.499440108515625*^9, {3.499487222421875*^9, 3.499487229921875*^9}, 
   3.4995302218125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.49948723246875*^9, 3.499487257421875*^9}}],

Cell["\<\
\\frac{R (\\text{s1}+\\text{s3})+S
   (\\text{s2}+\\text{s4})}{\\text{s1}+\\text{s2}+\\text{s3}+\\text{s4}}-c q\
\>", "Output",
 CellChangeTimes->{3.4994872645*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u2", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"T", 
      RowBox[{"(", 
       RowBox[{"s1", "+", 
        RowBox[{"q", " ", "s3"}]}], ")"}]}], "+", 
     RowBox[{"P", 
      RowBox[{"(", 
       RowBox[{"s2", "+", 
        RowBox[{"q", " ", "s4"}]}], ")"}]}], "-", 
     RowBox[{"q", " ", "c", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"s1", "+", "s2", "+", 
     RowBox[{"q", " ", "s3"}], "+", 
     RowBox[{"q", " ", "s4"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.498231719703125*^9, 3.498231731265625*^9}, 
   3.498231768078125*^9, {3.498231950234375*^9, 3.49823203625*^9}, {
   3.49823206853125*^9, 3.498232173734375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "c"}], " ", "q", " ", 
    RowBox[{"(", 
     RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}], "+", 
   RowBox[{"P", " ", 
    RowBox[{"(", 
     RowBox[{"s2", "+", 
      RowBox[{"q", " ", "s4"}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"s1", "+", 
      RowBox[{"q", " ", "s3"}]}], ")"}], " ", "T"}]}], 
  RowBox[{"s1", "+", "s2", "+", 
   RowBox[{"q", " ", "s3"}], "+", 
   RowBox[{"q", " ", "s4"}]}]]], "Output",
 CellChangeTimes->{3.49823217821875*^9, 3.498232299734375*^9, 
  3.498249117890625*^9, 3.4983435*^9, 3.498690219453125*^9, 
  3.4994011971875*^9, 3.4994401095*^9, 3.499487223734375*^9, 
  3.499487983671875*^9, 3.499530225375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input"],

Cell["\<\
\\frac{-c q (\\text{s1}+\\text{s2}+\\text{s3}+\\text{s4})+P (q
   \\text{s4}+\\text{s2})+T (q \\text{s3}+\\text{s1})}{q \\text{s3}+q
   \\text{s4}+\\text{s1}+\\text{s2}}\
\>", "Output",
 CellChangeTimes->{3.499487987734375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u3", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"R", 
      RowBox[{"(", 
       RowBox[{"s1", "+", " ", "s3"}], ")"}]}], "+", 
     RowBox[{"q", " ", "S", 
      RowBox[{"(", 
       RowBox[{"s2", "+", "s4"}], ")"}]}], "-", 
     RowBox[{"q", " ", "c", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"s1", "+", 
     RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
     RowBox[{"q", " ", "s4"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.49823219809375*^9, 3.49823220140625*^9}, {
  3.498232232078125*^9, 3.498232302359375*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"R", " ", 
    RowBox[{"(", 
     RowBox[{"s1", "+", "s3"}], ")"}]}], "+", 
   RowBox[{"q", " ", "S", " ", 
    RowBox[{"(", 
     RowBox[{"s2", "+", "s4"}], ")"}]}], "-", 
   RowBox[{"c", " ", "q", " ", 
    RowBox[{"(", 
     RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}]}], 
  RowBox[{"s1", "+", 
   RowBox[{"q", " ", "s2"}], "+", "s3", "+", 
   RowBox[{"q", " ", "s4"}]}]]], "Output",
 CellChangeTimes->{{3.498232295390625*^9, 3.49823230284375*^9}, 
   3.498249118921875*^9, 3.49834350090625*^9, 3.4986902208125*^9, 
   3.4994011983125*^9, 3.49944011065625*^9, 3.499487225296875*^9, 
   3.499487989828125*^9, 3.49953022803125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input"],

Cell["\<\
\\frac{-c q (\\text{s1}+\\text{s2}+\\text{s3}+\\text{s4})+q S
   (\\text{s2}+\\text{s4})+R (\\text{s1}+\\text{s3})}{q \\text{s2}+q
   \\text{s4}+\\text{s1}+\\text{s3}}\
\>", "Output",
 CellChangeTimes->{3.499487991734375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"u4", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"T", 
      RowBox[{"(", 
       RowBox[{"s1", "+", 
        RowBox[{"q", " ", "s3"}]}], ")"}]}], "+", 
     RowBox[{"q", " ", "P", 
      RowBox[{"(", 
       RowBox[{"s2", "+", "s4"}], ")"}]}], "-", 
     RowBox[{"q", " ", "c", 
      RowBox[{"(", 
       RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"s1", "+", 
     RowBox[{"q", " ", "s2"}], "+", 
     RowBox[{"q", " ", "s3"}], "+", 
     RowBox[{"q", " ", "s4"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.498232326484375*^9, 3.498232326765625*^9}, {
  3.49823238434375*^9, 3.49823240225*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"P", " ", "q", " ", 
    RowBox[{"(", 
     RowBox[{"s2", "+", "s4"}], ")"}]}], "-", 
   RowBox[{"c", " ", "q", " ", 
    RowBox[{"(", 
     RowBox[{"s1", "+", "s2", "+", "s3", "+", "s4"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"s1", "+", 
      RowBox[{"q", " ", "s3"}]}], ")"}], " ", "T"}]}], 
  RowBox[{"s1", "+", 
   RowBox[{"q", " ", "s2"}], "+", 
   RowBox[{"q", " ", "s3"}], "+", 
   RowBox[{"q", " ", "s4"}]}]]], "Output",
 CellChangeTimes->{3.49823240384375*^9, 3.498249120078125*^9, 
  3.49834350184375*^9, 3.498690221921875*^9, 3.49940119940625*^9, 
  3.499440111640625*^9, 3.49948799371875*^9, 3.4995302311875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXForm", "[", "%", "]"}]], "Input"],

Cell["\<\
\\frac{-c q (\\text{s1}+\\text{s2}+\\text{s3}+\\text{s4})+P q
   (\\text{s2}+\\text{s4})+T (q \\text{s3}+\\text{s1})}{q \\text{s2}+q
   \\text{s3}+q \\text{s4}+\\text{s1}}\
\>", "Output",
 CellChangeTimes->{3.499487995859375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rstp1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R", "\[Rule]", "4"}], ",", 
    RowBox[{"S", "\[Rule]", "2"}], ",", 
    RowBox[{"T", "\[Rule]", "5"}], ",", 
    RowBox[{"P", "\[Rule]", "3"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.49823391775*^9, 3.498233998140625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"R", "\[Rule]", "4"}], ",", 
   RowBox[{"S", "\[Rule]", "2"}], ",", 
   RowBox[{"T", "\[Rule]", "5"}], ",", 
   RowBox[{"P", "\[Rule]", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{3.498234000515625*^9, 3.498249121140625*^9, 3.498343504*^9,
   3.498690225140625*^9, 3.499400851625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rstp2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R", "\[Rule]", "4"}], ",", 
    RowBox[{"S", "\[Rule]", "3"}], ",", 
    RowBox[{"T", "\[Rule]", "5"}], ",", 
    RowBox[{"P", "\[Rule]", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.499400843109375*^9, 3.4994008433125*^9}, {
  3.499401631390625*^9, 3.49940163503125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"R", "\[Rule]", "4"}], ",", 
   RowBox[{"S", "\[Rule]", "3"}], ",", 
   RowBox[{"T", "\[Rule]", "5"}], ",", 
   RowBox[{"P", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.499400845640625*^9, 3.499401635796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"u2", "==", "u3"}]}], "}"}], "/.", "rstp1"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"x3", "\[Rule]", 
       RowBox[{"1", "-", "x2"}]}], ",", 
      RowBox[{"s1", "\[Rule]", "0"}], ",", 
      RowBox[{"s4", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "s2", ",", "s3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49834361403125*^9, 3.49834370471875*^9}, {
   3.49834373596875*^9, 3.4983439194375*^9}, {3.498343952375*^9, 
   3.49834397703125*^9}, {3.498344035484375*^9, 3.498344041140625*^9}, 
   3.498344117296875*^9, {3.498344171265625*^9, 3.498344176390625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.0011372597387141132`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.0010414265877776454`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.10081397464003482`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.9460458388528351`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.11099442488469355`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.021785257114126523`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.498344179921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"u2", "==", "u4"}]}], "}"}], "/.", "rstp1"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"x4", "\[Rule]", 
       RowBox[{"1", "-", "x2"}]}], ",", 
      RowBox[{"s1", "\[Rule]", "0"}], ",", 
      RowBox[{"s3", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "s2", ",", "s4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.498346344765625*^9, 3.498346379203125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
    RowBox[{"s4", "\[Rule]", "1.`"}], ",", 
    RowBox[{"s2", "\[Rule]", "0.`"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.498346385875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"u4", "==", "u3"}]}], "}"}], "/.", "rstp1"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"x3", "\[Rule]", 
       RowBox[{"1", "-", "x4"}]}], ",", 
      RowBox[{"s1", "\[Rule]", "0"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x4", ",", "s4", ",", "s3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.498346500015625*^9, 3.498346540140625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x4", "\[Rule]", "0.006583108916871749`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.006583108916871749`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.10491667847805938`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x4", "\[Rule]", "0.9123358100020471`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.9123358100020471`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.05724548368410279`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.49834655246875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u2"}]}], "}"}], "/.", "rstp1"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"x4", "\[Rule]", 
       RowBox[{"1", "-", "x2", "-", "x3"}]}], ",", 
      RowBox[{"s1", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "x3", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.49835987175*^9, 3.49835987209375*^9}, {
  3.498359904015625*^9, 3.498359990265625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.087664189997953`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.057245483684102795`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.912335810002047`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.9934168910831281`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.10491667847805937`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.006583108916871881`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.498360001578125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x3", ",", "x4", ",", "s1", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49940129684375*^9, 3.499401353390625*^9}, {
  3.49940138953125*^9, 3.499401418546875*^9}, {3.4994017975*^9, 
  3.499401798484375*^9}, {3.499402516609375*^9, 3.499402552859375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "0.010101010101010102`"}]}], ",", 
     RowBox[{"x3", "\[Rule]", "1.0101010101010102`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s1", "\[Rule]", 
      RowBox[{"-", "0.00101010101010101`"}]}], ",", 
     RowBox[{"s3", "\[Rule]", "0.10101010101010101`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.3604749787955895`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.004028837998303612`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.6354961832061069`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.03604749787955895`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.0021204410517387546`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.3435114503816794`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.499401407359375*^9, 3.499401420828125*^9}, 
   3.4994016436875*^9, 3.4994018029375*^9, 3.499402520984375*^9, 
   3.499402572875*^9, 3.499530285109375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u1", ",", "u3", ",", "u4"}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"q", "\[Rule]", ".1"}], ",", 
     RowBox[{"c", "\[Rule]", "1"}]}], "}"}]}], "/.", 
  RowBox[{"Last", "[", 
   RowBox[{"Sort", "[", 
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"seqns", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x1", "\[Rule]", 
          RowBox[{"0.3604749787955895", "+", "0.0001"}]}], ",", 
         RowBox[{"x3", "\[Rule]", 
          RowBox[{"0.004028837998303612", "-", "0.0001"}]}], ",", 
         RowBox[{"x4", "\[Rule]", "0.6354961832061069"}], ",", 
         RowBox[{"x2", "\[Rule]", "0"}], ",", 
         RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], "]"}], "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.49940245653125*^9, 3.499402480484375*^9}, {
  3.499402582953125*^9, 3.4994025925625*^9}, {3.49940266459375*^9, 
  3.499402709609375*^9}, {3.49940332203125*^9, 3.499403353140625*^9}, {
  3.499403392890625*^9, 3.499403396796875*^9}, {3.49940344290625*^9, 
  3.4994034506875*^9}, {3.499403568484375*^9, 3.499403576734375*^9}, {
  3.499403611671875*^9, 3.49940362759375*^9}, {3.499403661234375*^9, 
  3.499403674296875*^9}, {3.499403719609375*^9, 3.49940376328125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.9999284101699564`", ",", "2.999623083604814`", ",", 
   "3.0004908063568694`"}], "}"}]], "Output",
 CellChangeTimes->{3.499402711078125*^9, 3.49940335609375*^9, 
  3.4994034096875*^9, 3.499403676921875*^9, 3.499403734109375*^9, 
  3.499403771796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1.5"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x3", ",", "x4", ",", "s1", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.499402142328125*^9, 3.499402143015625*^9}, {
  3.49940404859375*^9, 3.499404058984375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.033816425120772944`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.966183574879227`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.0033816425120772944`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.0966183574879227`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.3867194868892662`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.028815317864553804`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.5844651952461798`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.03867194868892662`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.012261837389171854`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.2886247877758913`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.499402143890625*^9, 3.499404066265625*^9, 
  3.499530298125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "2"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x3", ",", "x4", ",", "s1", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.499404118390625*^9, 3.499404119484375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.07407407407407407`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.9259259259259258`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.0074074074074074086`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.0925925925925926`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.4065040650406504`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.05691056910569095`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.5365853658536586`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.04065040650406505`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.020325203252032527`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.24390243902439024`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.499404122*^9, 3.499530308921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "3"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x3", ",", "x4", ",", "s1", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.499404435578125*^9, 3.499404436171875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.1452991452991453`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.8547008547008547`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.01452991452991453`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.08547008547008547`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.43271915131211613`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.11878838637632602`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.44849246231155787`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.04327191513121161`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.03210496929089894`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.17587939698492464`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.499404439515625*^9, 3.499404529203125*^9, 
  3.499530313625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "0"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}], ",", 
      RowBox[{"s1", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "x4", ",", "s3", ",", "s4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49944026278125*^9, 3.499440263875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x3", "\[Rule]", 
      RowBox[{"-", "0.026969600708472985`"}]}], ",", 
     RowBox[{"x4", "\[Rule]", "1.026969600708473`"}], ",", 
     RowBox[{"s3", "\[Rule]", 
      RowBox[{"-", "0.0553939201416946`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "1.026969600708473`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x3", "\[Rule]", "0.9269696007084728`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.07303039929152717`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.13539392014169455`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.07303039929152717`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.499440264703125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", ".1"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}], ",", 
      RowBox[{"s1", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "x4", ",", "s3", ",", "s4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49943987253125*^9, 3.499439875453125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x3", "\[Rule]", 
      RowBox[{"-", "0.027045207496004364`"}]}], ",", 
     RowBox[{"x4", "\[Rule]", "1.0270452074960044`"}], ",", 
     RowBox[{"s3", "\[Rule]", 
      RowBox[{"-", "0.05302300621933099`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "1.0270452074960044`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x3", "\[Rule]", "0.9381273517663892`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.061872648233610834`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.13169901469213188`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.061872648233610834`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.49943987840625*^9, 3.499440165703125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}], ",", 
      RowBox[{"s1", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "x4", ",", "s3", ",", "s4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49943966734375*^9, 3.499439706078125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x3", "\[Rule]", 
      RowBox[{"-", "0.024801826722685938`"}]}], ",", 
     RowBox[{"x4", "\[Rule]", "1.024801826722686`"}], ",", 
     RowBox[{"s3", "\[Rule]", 
      RowBox[{"-", "0.03790370023761185`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "1.024801826722686`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x3", "\[Rule]", "0.9961932441479137`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.0038067558520863158`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.1029232060893674`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.0038067558520863158`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.499439711484375*^9, 3.499440150125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"x4", "==", 
         RowBox[{"1", "-", "x1", "-", "x3"}]}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp2"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", ".1"}], ",", 
      RowBox[{"s2", "\[Rule]", "0"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x3", ",", "x4", ",", "s1", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.499438186046875*^9, 3.499438188421875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "0.1001100110011001`"}]}], ",", 
     RowBox[{"x3", "\[Rule]", "1.1001100110011002`"}], ",", 
     RowBox[{"x4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s1", "\[Rule]", 
      RowBox[{"-", "0.01001100110011001`"}]}], ",", 
     RowBox[{"s3", "\[Rule]", "0.11001100110011001`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0.2885372509680829`"}], ",", 
     RowBox[{"x3", "\[Rule]", 
      RowBox[{"-", "0.026159811884498785`"}]}], ",", 
     RowBox[{"x4", "\[Rule]", "0.7376225609164159`"}], ",", 
     RowBox[{"s1", "\[Rule]", "0.02885372509680829`"}], ",", 
     RowBox[{"s3", "\[Rule]", 
      RowBox[{"-", "0.023999827416971372`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "0.480535870303854`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.49943818940625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u2", ",", "u3", ",", "u4"}], "}"}], "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"seqns", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", "0"}], ",", 
          RowBox[{"x2", "\[Rule]", ".96"}], ",", 
          RowBox[{"x3", "\[Rule]", ".03"}], ",", 
          RowBox[{"x4", "\[Rule]", ".01"}], ",", 
          RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], "]"}], 
     "]"}]}], "/.", "rstp1"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.49836695515625*^9, 3.49836706559375*^9}, {
  3.498367098140625*^9, 3.4983671328125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.906567880080548`", ",", "2.5925131606148715`", ",", 
   "2.217150301122419`"}], "}"}]], "Output",
 CellChangeTimes->{3.4983670716875*^9, 3.49836713365625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u2", ",", "u3", ",", "u4"}], "}"}], "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"seqns", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", "0"}], ",", 
          RowBox[{"x2", "\[Rule]", ".9"}], ",", 
          RowBox[{"x3", "\[Rule]", ".09"}], ",", 
          RowBox[{"x4", "\[Rule]", ".01"}], ",", 
          RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], "]"}], 
     "]"}]}], "/.", "rstp1"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.498510636296875*^9, 3.498510654765625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.921532064971231`", ",", "3.0734282971338165`", ",", 
   "2.40108311311975`"}], "}"}]], "Output",
 CellChangeTimes->{3.49851062703125*^9, 3.4985106588125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u2", ",", "u3", ",", "u4"}], "}"}], "/.", 
    RowBox[{"Last", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"seqns", "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "\[Rule]", "0"}], ",", 
          RowBox[{"x2", "\[Rule]", ".1"}], ",", 
          RowBox[{"x3", "\[Rule]", ".1"}], ",", 
          RowBox[{"x4", "\[Rule]", ".8"}], ",", 
          RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], "]"}], 
     "]"}]}], "/.", "rstp1"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.4985111559375*^9, 3.498511172890625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.461238022022646`", ",", "2.2159911489688198`", ",", 
   "2.134690494494336`"}], "}"}]], "Output",
 CellChangeTimes->{3.4985111784375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u2", ",", "u3", ",", "u4"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s1", "\[Rule]", "0"}], ",", 
      RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"s3", "\[Rule]", "0.057245483684102795`"}], ",", 
      RowBox[{"s4", "\[Rule]", "0.912335810002047`"}]}], "}"}]}], "/.", 
   "rstp1"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.498367576328125*^9, 3.498367603734375*^9}, {
  3.498367633859375*^9, 3.49836766196875*^9}, {3.498367707625*^9, 
  3.49836771378125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.118082896311803`", ",", "2.1180828963118037`", ",", 
   "2.1180828963118037`"}], "}"}]], "Output",
 CellChangeTimes->{3.498367682453125*^9, 3.4983677146875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u2", ",", "u3", ",", "u4"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s1", "\[Rule]", "0"}], ",", 
      RowBox[{"s2", "\[Rule]", "0.11099442488469355`"}], ",", 
      RowBox[{"s3", "\[Rule]", "0.021785257114126523`"}], ",", 
      RowBox[{"s4", "\[Rule]", "0"}]}], "}"}]}], "/.", "rstp1"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.49836782446875*^9, 3.498367843953125*^9}, 
   3.49836790803125*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.9211744791483447`", ",", "2.9211744791483447`", ",", 
   "2.3281414262510456`"}], "}"}]], "Output",
 CellChangeTimes->{3.49836793328125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u2", ",", "u3", ",", "u4"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s1", "\[Rule]", "0"}], ",", 
      RowBox[{"s2", "\[Rule]", "0.0010414265877776454`"}], ",", 
      RowBox[{"s3", "\[Rule]", "0.10081397464003482`"}], ",", 
      RowBox[{"s4", "\[Rule]", "0"}]}], "}"}]}], "/.", "rstp1"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"c", "\[Rule]", "1"}], ",", 
    RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{3.498690283203125*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.8970073390334745`", ",", "3.8970073390334727`", ",", 
   "3.9795508814412632`"}], "}"}]], "Output",
 CellChangeTimes->{3.4986902974375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u2"}], ",", 
        RowBox[{"u2", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp1"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1"}], ",", 
      RowBox[{"x4", "\[Rule]", 
       RowBox[{"1", "-", "x1", "-", "x2", "-", "x3"}]}], ",", 
      RowBox[{"s1", "\[Rule]", 
       RowBox[{"x1", "/", "10"}]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "s2", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.498506875890625*^9, 3.49850687703125*^9}, 
   3.498506910375*^9, {3.498506974171875*^9, 3.498506988890625*^9}, {
   3.49850703734375*^9, 3.49850706890625*^9}, {3.49850728146875*^9, 
   3.498507285375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.08118544261029073`"}], ",", 
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "0.03861376580751037`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "0.9904430929626411`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.05598996042089005`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "1.0101010101010102`"}], ",", 
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "0.010101010101010098`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.10101010101010101`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.49850727403125*^9, 3.49850730921875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u2"}], ",", 
        RowBox[{"u2", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp1"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", ".5"}], ",", 
      RowBox[{"x4", "\[Rule]", 
       RowBox[{"1", "-", "x1", "-", "x2", "-", "x3"}]}], ",", 
      RowBox[{"s1", "\[Rule]", 
       RowBox[{"x1", "/", "10"}]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "s2", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49850754940625*^9, 3.4985075503125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.08575306260937876`"}], ",", 
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "0.3142969391763991`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "1.5043394406943105`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.0700025000892889`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "1.058201058201058`"}], ",", 
     RowBox[{"x1", "\[Rule]", 
      RowBox[{"-", "0.05820105820105823`"}]}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.10582010582010581`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.49850755409375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"seqns", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"seqns", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"u4", "==", "u3"}], ",", 
        RowBox[{"u3", "\[Equal]", "u2"}], ",", 
        RowBox[{"u2", "\[Equal]", "u1"}]}], "}"}], "/.", "rstp1"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"q", "\[Rule]", ".1"}], ",", 
      RowBox[{"c", "\[Rule]", "1.5"}], ",", 
      RowBox[{"x4", "\[Rule]", 
       RowBox[{"1", "-", "x1", "-", "x2", "-", "x3"}]}], ",", 
      RowBox[{"s1", "\[Rule]", 
       RowBox[{"x1", "/", "10"}]}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "s2", ",", "s3", ",", "s4"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.49850757540625*^9, 3.498507584328125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.08204931366635607`"}], ",", 
     RowBox[{"x1", "\[Rule]", "0.10235601615762825`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.7303832867247902`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.04898466487543639`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x3", "\[Rule]", "0.9661835748792271`"}], ",", 
     RowBox[{"x1", "\[Rule]", "0.03381642512077295`"}], ",", 
     RowBox[{"s4", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"s3", "\[Rule]", "0.0966183574879227`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.49850758921875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"No", " ", "linkage"}], "*)"}]], "Input",
 CellChangeTimes->{{3.4982673499375*^9, 3.4982673568125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u1list", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "u1"}], "}"}], "}"}], "/.", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Last", "[", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"seqns", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x1", "\[Rule]", 
                  RowBox[{"y", " ", "z"}]}], ",", 
                 RowBox[{"x2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], "z"}]}], ",", 
                 RowBox[{"x3", "\[Rule]", 
                  RowBox[{"y", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"x4", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], 
             "]"}], "]"}], ")"}], ",", "rstp1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"c", "\[Rule]", "1"}], ",", 
            RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0.1", ",", ".8", ",", ".1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0.1", ",", ".8", ",", ".1"}], "}"}]}], "]"}], ",", 
     "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.49824944946875*^9, 3.498249451140625*^9}, {
   3.49824987090625*^9, 3.498249872609375*^9}, {3.4982500293125*^9, 
   3.498250043484375*^9}, {3.49825011415625*^9, 3.498250141703125*^9}, {
   3.49825023215625*^9, 3.498250233109375*^9}, {3.4982546579375*^9, 
   3.49825467353125*^9}, 3.498701025125*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u2list", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "u2"}], "}"}], "}"}], "/.", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Last", "[", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"seqns", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x1", "\[Rule]", 
                  RowBox[{"y", " ", "z"}]}], ",", 
                 RowBox[{"x2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], "z"}]}], ",", 
                 RowBox[{"x3", "\[Rule]", 
                  RowBox[{"y", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"x4", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], 
             "]"}], "]"}], ")"}], ",", "rstp1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"c", "\[Rule]", "1"}], ",", 
            RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0.1", ",", ".8", ",", ".1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0.1", ",", ".8", ",", ".1"}], "}"}]}], "]"}], ",", 
     "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4982546954375*^9, 3.498254698828125*^9}, 
   3.498701030375*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u3list", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "u3"}], "}"}], "}"}], "/.", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Last", "[", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"seqns", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x1", "\[Rule]", 
                  RowBox[{"y", " ", "z"}]}], ",", 
                 RowBox[{"x2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], "z"}]}], ",", 
                 RowBox[{"x3", "\[Rule]", 
                  RowBox[{"y", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"x4", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], 
             "]"}], "]"}], ")"}], ",", "rstp1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"c", "\[Rule]", "1"}], ",", 
            RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0.1", ",", ".8", ",", ".1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0.1", ",", ".8", ",", ".1"}], "}"}]}], "]"}], ",", 
     "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.49825471471875*^9, 3.498254718078125*^9}, 
   3.49870103596875*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"u4list", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"y", ",", "z", ",", "u4"}], "}"}], "}"}], "/.", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Last", "[", 
            RowBox[{"Solve", "[", 
             RowBox[{
              RowBox[{"seqns", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x1", "\[Rule]", 
                  RowBox[{"y", " ", "z"}]}], ",", 
                 RowBox[{"x2", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], "z"}]}], ",", 
                 RowBox[{"x3", "\[Rule]", 
                  RowBox[{"y", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"x4", "\[Rule]", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "y"}], ")"}], 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "z"}], ")"}]}]}], ",", 
                 RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], 
             "]"}], "]"}], ")"}], ",", "rstp1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"c", "\[Rule]", "1"}], ",", 
            RowBox[{"q", "\[Rule]", ".1"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0.1", ",", ".8", ",", ".1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "0.1", ",", ".8", ",", ".1"}], "}"}]}], "]"}], ",", 
     "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.49825472128125*^9, 3.49825473209375*^9}, 
   3.498701049546875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u1list", ",", "u2list", ",", "u3list", ",", "u4list"}], "}"}], 
   ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Yellow", ",", "Green", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<y\>\"", ",", "\"\<z\>\"", ",", "\"\<u\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.498234818828125*^9, 3.498234829390625*^9}, {
  3.498234861828125*^9, 3.49823487009375*^9}, {3.498254742625*^9, 
  3.49825482246875*^9}, {3.4982549656875*^9, 3.498254969421875*^9}, {
  3.49826126221875*^9, 3.49826126746875*^9}, {3.49826181578125*^9, 
  3.49826186503125*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyc/Xc81+/3P4Abz/20i1KSUUpUKkVGhwaiQsMuikhDWtpDaSkpqzSkRHtJ
Q1pIPInMeEYZT7OiSEoaP98X1/N6f67r9/vn5x+3jtP1ONc553HO435/jKO5
bO385VISEhIhfAkJ6d7fp2P/308qoN/bQsw/zjaSsPi/cgFMLdhYnzwJyw0n
/b+fEvg5b7jGiwmkvhDa4w0WK/+PXOK/nxqI2FIVVz6BXEcEM1yT3l8wxHI/
3//30whTfC/ptJqQ67fAM4WDu/bYILlAbP+HEvd5jzpIuQACGgrj3rdjObJ/
/bBcpU2dpL4QDu9pilv7C8uR/cs8vk3LY0gS64ggSefPTIEyliP7H118+kJ5
oiSxfgusfG1Yc89b0gLZgewfO/lmiO8FUi6AlXvcZw+5jOXot/fz8qaCZFJf
CDoHJk03y8JyZH/7zr+n3tWQ64jAWiogcTFPSixH9utu3fmcYStFrN8CsoKx
rRduSFmg4yH7K0sd3O0XkXIBOH39VT7cF8vRegffh764t4fUF8KYUXxv7mUs
R/bPP2ttvfc9uY4IZLXL1n8ZIy2WI/uX6RUZpJ2UJtZvgfl6IYPm6zIs0LrI
/q46q+dcNWlCLoBnXtt8Nk/DcmT/kI235+gGkvpCCH/zrjA2BcvRb+3fxZ3T
FBnEOiK4pT9y0/wjWI7sP3C386unNpNYvwXGcVZUSxYxLdD/R/b3BDWP38li
EHIBxK7cs+/8TCxH9v/Z9TwqJJbUF8KWs+FLbnHw+uj4iYxmgwFRTGIdESS4
yl+7YMQSy5H9Ajuvf5VNLGL9Fsi3dLjwMIZtgfSQ/R0B+xY3GTAJuQAMFAI/
fz6N5cj+rYfLM95psQh9IVxOnxp/OgvLkf3JTCl7ma1sYh0RjLO8/VxzHEcs
R7/fSt778qmcQ6zfAsKiD5/vr+VaoH8j+23sP6u/LGMRcgHY5bc0lO1li+XI
/h8NuY0eVhxCvzeve3SNDGTw+sh+GaVIm40ZXGIdEVgte2t2wIsnliN7jeVn
6V1t4BHrt4Dy/IzaixoDiLqaCqOUPWeXX5am6n/9pOWFey4xqPo/UTfUpMeK
SdX/9KADRu4vmVT9v3PwwXxFAxZV/6/Zi26HRbGo+m81Nzmxq5tF1X/VsZ7q
eivZVP339Yy49s2IQdX/X4ZppieNmFT9rzMpKd/bwKTq/z6v59rmG1hU/f9a
0jZ6cCeLqv+7k2fbvtzApur/na3nkz/9Ju1sgX+jJG4OP8eh6v/eqiK/KwIG
Vf8nDp24i1fGpOq/8cCAs1oxLKr+O26cOU3XjE3V/ySrCKHoHZuq/6GzYld5
7eZQ9b9+yoDp+yZzqfrvpqfpsIXDo+q/y/oZe2Elk6r/0UPkc46Gsqj6/6lt
jXOJH5uq/4yhOQqJ4zlU/ff3hO2qXRyq/ks1jrWTzuFS9d/nmJ7w4E3Szha4
+nkDY1USn6r/qjdHj8jTYVH1f57S6tzPvXaS9V/N8eBWwzUcqv67dn5UdV7G
pep/4Xn3L5muPKr+T7sd+niKO7YH2W+St3nFHB8Zqv5Hz3ntM95flqr/NnHq
Hq5KbKr+PxN9Wuq9n0PV/72dT+6MzuBS9X9n2qt9nV94VP33GJXtrDhEhqr/
s/Xl42eYy1L1n8syPug3T46q/8OnWrToz5Cn6r+kZuRvRXuy3gpAwUs9fJQs
j6r/3Gmv1jad4FP1391vkqxxtwxV/38W/NlgMF2Oqv9/R658edBHnqr/pb9c
30qOU6Dq/4Idap8DohWo+l9g125jNZKstwIQCtcnlsyVoer/ic/vd2YOlqPq
//2SR9KiaHmq/kcdvWFY6qNA1f8fG1ttv31QoOr/p3HJFVmgSNX/+kF2u+6O
4FD1/+mUCIMST0mq/hseXf01wVaSqv9HNi24KwukvhDGvr/oq2QqSdX/CyrB
glgg1+m9flbf7qfnIEnV/4SgHdMHbCLXb4GD+y/ODskgr6tTYepNJa+CbLr+
S5X477j8kkHV/1OKK55OLCD1hWCkkK8uVc+g6v/wB4Ehw7lkHxHBhvBmrtlM
JlX/b2/x/Sd/kewvvf3r/uJlnVPJup0KLQeGP7MXkXIBrMt44/qnnUXV/9Ad
2QsuybOp+r/p8cQXcuZ0/U8FrX9eu+j6v/+Jc1LR//QF8fXzLx/bWA+yT/Ve
f57wUF8uy6Xqf88AuzBYz6Hqv4a/8vlXJ8i63YtfpJee6Egn9YUwbfGcmfIM
LlX/Ux9///PMnUvVf4/PZumG+XT9V/dJ6nrrStd/4zjZzza/cB1G9p/YcNrQ
4RGXkAsg4ia/u6sJy5H9l5zcZ/0ZTa4jhAZHweOu7ViOfgdEH1dMqqXrv+e8
VU6VznT9T4n3OHrlLdmnWuBzrOzrvY4yVP0fF3mZsfItj6r/N6v3J/kp86n6
L+1TvyDah0/V/0bdmQGl6Xyq/i9I636ZOpqu/ztHNe+YckKGqv9Pck694XaQ
drZA0sJ7D3RmyVL1v+7mTWeJWrKeC2DEy56va8bKUPW/YtE6Zm6IDFX/G6r/
rVxUQ9f/KZwIqDCSpep/973KGadCZKn6v3LuLIXPmaSdLaBmHZ95rkuWqv/l
x3a0PG+Woep/6XvBpZlmslT9z7pyXXXoMXIdIcSHFk3pKpOl6v8PN9sPExXk
qPr/YcyC8P3mclT992zZorLVi+wvLZByOnbcrTZ5qv6/GPj2q6k5Xf/tfOp4
T7bR9X9uiapGSxZd/yu2ViWf1Zai6n+xvfNYibNSVP3/oHUzZpy5NFX/n2hL
5m3XZFD139yo6VzIbrKupoKgda1e7mQpqv6zx90f0fBYiqr/rlPyD913k6bq
v4BXXj9Dna7/j1YJdoUMoOs/z1E/U82BRdX/pyV5P659p6//58z7UcM35FH1
/5tWe8QwXWmq/l+f33VwrwSDqv+3ztfcOP+XxAtCmJSd43x1HIuq/9y3d1OO
nKfrf/7t+DMjvblU/ff4d/XE9kN8qv7DqWEq69lyVP33k2tu3q3PoOq/XqS+
4RVvJlX/uw+M1T2Uy6Lqf6ihLcdxJX39f3HPoRl+tjyq/i8qu/Eo0F+Gqv/m
TwoUJ98h7WwBpRU6wVYbFKj6r+oddrvYkeRbBPCyK2/BwW6MC5D9ovExClBM
X/+LZs2zWFlJ1/+h2sFK8lxZqv4HJCt3DjKTp+q/tYva1fALpJ0tYDI5xuXT
ZkWq/oexfmTK3yH5FgG8+u15JL+Svv5vUmV/PDmKrv8L0s/H5O+Uper/cum1
s3c8kqfqf2Qdx92xTIGq/9sy2NMnniHtbIGfEzeHbh+rRNX/4mkL/7FX09f/
numT/h7V51P1P/9V5L8LJWR9FsKaD8XHPFQVqPqv1dqhyVNUpOq/7szX7zXy
FKn6L99WLJBwIO1sgeeNeVv9bipR9T9v1ondVwT09X+DvpPekgFk3S6BnMrk
t989SRwhhB1u12C3hyJV/4fOinv5madE1f+h05aGFOxRouq/ymbPL05FpJ0t
oMwcXvLhkbLFnfAIm+5jTZQc/bs2oGDBkANN/3/r99mRIfaD1+A/0Q0HJPrz
OUcsP7hsv/XgdxJi/b59vYE6jccV7ENYv+/vxXBkw7/XHlWkfm8/4trafvmf
9ZE8IXPjRvX/0c9//f9+3oJ/doJZ+P/oS/73uxTqWlXUuP+jj+Ly8uJXof5h
0n4hxFy64zSzFuv3/a6CjuLvX1LCsP5/5kyqhk5G2t6FH8n1W0CoNKPb9yW5
fgt0Dvy3Ya4F6rP5YvniM9Nn7spF8iKM7w5/8fd1kxKv37feS7hbI5g+6yBe
v+A/PzwB3W/qF8rfkfakwpRs3hRbar+p0MGtCLatlCDsEcD7yWpRe8aQ9vT2
L+Ej9bytkoQ9NWC+o9FQ6xheH8mbd3/NXf2RjFctXOAZ/7wXTuZDDfxNEyi9
+ojt6Yt7EXgeLb9no4/t6dvva7gx6mFP4DZJQr8EZL2WjGwfj/XFddIpar3x
Pkki30SgvqBqiPZJMt9E8GuOksulbmx/X141gJ/Jpw03T2P9M/8dRwSn5Cam
r/lF+rMcxkYlL5c1JO0vhRu3zyg/DCHzQQi207+ceDOV9L8Qnod4qR6OkCTy
sxefBsp/lLtM+rMRRm/fdtNgALnfZjjzdVfe3Vtk/jTC1sKgwaKB2J6+v3+A
tf4/wtssSH9Wwv3t3pIa0Wj9UnHebusZ9l2qE91vKhfLt7xKYB8/LS1evy8f
XkBuat5nFT28/n/L+b4C6+gzuZLbSP+kgvX0Rc/n6ZL+SQVh1eAfjzeR9tdA
9VsV/vHZWB/Jw+5vz3h7lbRfAL7LVRd+ypUk7BfAYp3dGTvVpcT6fflQDCdc
PgwMKMX6fX8vgJ6nrTtrtaQIe2rB5E7330NO2J4+/ToocHnD784h81kENqs0
EoyWkf7vxZt5jmHG+dh+lOe8RVsL/YXYHiQ3Sbb+snMStr/vdwUcahRdXdZM
7rcMMtXGtPuaSBH21MNai1mVQ4NI/zfAIZ/3Nd9/Y/tRHqZFuwYeP0zutxHC
9uX/4zCkCP8LwbnT/VHEF9Ke3ut528dBHvOxfl/+fIAb72uWSLNwvvX5uQru
+1mVP/SQIvKnGXz39oy8eZ30ZxN0z71+MFBByqIvru/EeavhLzUwfwbDou88
qRLLX6gG9ej+QdfJ1WK5V25L3YEHTCIu2QB7Us1eZuN9/acemw4TyqI29gwg
/ZAK6qJP+lqZpB9S4deWEl6FItZH+Zww6QbXRIH0Qw20GXxenrmL3FdvPjdl
OCRukCL2JYDQKyZxdsVSxL4E8Mg/+VO7gbR4nT7/F0NameBX+FG8zr//ft6A
9vm9EdHVeJ2+8zoXjqwwHXNmojSx3zrQffNqX+cEbH9fn62FY1IxoQuPSRH+
FMFql/aeLRZSRJ6LIDOoIOvRM7xflP9fdeaqXg/HdiJ54ehzBwJ+YjuR/O6Y
1m8TluL99tkjhO5ViUvP3MPr9O3rLVyc+945li9N+K0E7MYrzzvpjffb9/8a
gNEyLN1goxRRN+rBZUbU2pNvyfO0EaLGPO2MOUTq955HOY6vYoZIE/EVwh3N
Zv+6h2R8heDR0xFbNJa0Uwjcsj+CFwl4ndj+vx94U/P820e8zuv+3+2TFWXk
ZuN1JPr/n/tZS5fRl6WJ/GyCE4//giiBtL8Z9l0JVonehPByrfg8yh02nKOz
HeHKOrH834POo4mWbLGdU/77f2kQu0ZUWeuN7Zz8nzwTXp9u8BQJcHz7/t57
nZLTJKofT/otFZ5OPi6ZtpT0Wyq0VNqF3XhEnhepMHAvWzVOHq+Dzjv7+RpK
z77idZDcdI5snNdm0m81oGP1S1f6L+kHAQReUgt8FS9N+EEAL2xu/9k8gCHW
9+/vOypzopzOvsD6Ev19yvFw8tD1LgzCThHESXxfuXCqtNjOvrjXwin50kmD
4rCdfflfAxHq934LpRjE+SWCy9q/Ln63kCbOLxF8GPXnm0alNHF+iWCgvsSs
OZuw/ei8G7/l/sHr1dh+JO/YYbY5cynWn9SfRy4nHN6t4zHE+iv6825wHOP4
qQDSzkbYvEolsTMJ29lXx+qBo99TfEAR1/O+/BRB7OdqCdUdeB103r30Ltmx
6Q5eB8k3ttUdD1tMrtMII7Z2XErkMYn4CsHv7N/9moYMIr5CkHnwZ9/HHLzf
vri8hxmPtj7hBGD9vuO/gxXTnmyb/Q7b2VeXWuD+pKHfO4wZRB42w+oAM4Zr
Etm/GkH76uIBzwcg/qRefN4VNkwy/CGDcH2DWF42c/qmRjEvUQt5/x3nJShf
zTy+9TCOY19+PoPC4kzV3zVknqfClm37uN83kHmeCiZ6uaEH32F9dL4srHY7
Mu8ig8jzGpAdcGn5ETvSfgH8XfDk/cTTDMJ+AazTT0zrHI/1c/vxheNEpwXj
nmB9hEdK7GVgRRiTsKcOrpsfSzvdRsaxBkbtuCe7dhmTyHMRhP75PfqrHpPI
cxFMXqddOL8J24Py/2zwLI13PaQ9JTCRFVj65TLWl/rvdwU8Onlh81R7JqFf
Bv7ywaIbuUziPGqAE3eWxPwMZRJ5JYJhbm7OZdIssb6Yl+YvDpLLx/pIXqV+
4wkjkkX4XwiZI38FtGxmEv4XAicmJe+4CdbvO38/QMOGJzKbakj9SoiZEjhX
wxfb49vfRw5pLr8eORX3C8n+vqP2fKlq5D2WRX4/zkF5q3X0XlMTF/FmzWL5
QJmClXnzFcT2rPxv/VdwW09y293d2P8Iv8TsXNai0MQg9psKPw3t0wY5kvmW
CpskZ4xPKsH6KG+bQwK2OMqyxPpIvqQhdtOuWtJ+AZRYn+d/LGcS9gsgPPTl
T8+bWL/Pn8XwrWjqqHfzWGL9vri/gfNvTrAqmkn/10ESY86C3wdJe2qhdXxQ
z+mBbLG++P7jgs23Le+ziHwTQbFN6yPVE2yxPShvOd8Xse38sD1IvmeNwo8S
J6zfd5xSuFO+dB1zD9Yv6Od/1rfMKh3yCtvTh8cbQIu7ce2aqWzCnnrYFRXz
TS8H66O8ndO9safaG+sjecfo2M5GMw7hfyFU5AxasEaOTfhfCKw6jax5shxi
v9WwjMF+HXgd6/flbRXk7T4VXOjOEdvTF5cmmNP6fFvxYTaRP83QaX252DIR
r993vufAgFPPi60zmMT6GXDrW9lP5hwyf1LhT+id73uXk/mTCtpr5oUmDGMR
/q8B81GG86ZmYPuRPPGsd55TBranLy51YJuWp3DDi0PYUwvXfW/rH1fkEv4R
gePIhfYBGzlEPojg9Qxlq20ruYT9IvjyS/Om0n6sj/iZgfsnfV58H+ujOO6d
MfJkgipXrI/ki3UnL036R9rTAvtjry/cGIf1+/7eBJ4Lfz6Xm84T8yrovFtS
6nb+XT06rzEvWr7RIcBwJJPgYd7AN6fEe+0GTLE+4kWltjXELHtK6pfAFw23
cKejWB/JbwweU3+3COsjXjRc5kpYVTHWR7zokosC0eJaJmF/b94urpb7oMAi
7BeC3QzjRq/FLLE+4kUPDB9Raz4b60/qz3PbnPRQjQIWsX4LfDidpRb0lU2s
3wIXOfpD04M4BE5vAf7WX57X5bhinI7k+z66jLp4k0vxoq1dFfLSm7D/ES/a
lTrHfv8sBmFPKiTsb7gnapQm7OnF3V2r1L+OZBD2COCTxx6LvBVMwh4BXFoa
dfPmTSZhTw3I6K51KN2P/YPkK3JHzTtZySLiVQuHXStmuj3D+ogX9fPOF+o0
s8T2oOuQnppC08U12B7Ei6p7n44aLWQS+iWQHzcjK0WNJdYX3/9abH39lz+L
yDcRNA0JjJzche1B8hGNv4PeO7PF+ui8Cz+ccs5iPI4v4kUrsh5Eh/qwCX+W
w42fm4QjdrEI+0vBzm/6NP8wFqEvhHtdnM+sZBbhfyEsHp9g1MZlE/nZCCkK
bpWWq9iEP3uvb0slFcOq2MR+m+HMPFNPz2tYH/GiwwIHxUd+xPb3/f0DyMXE
7j7HYxP+rISpMl9+jhjDFuNflLext78WKTvxxPgXyfXrSyUM+HyKF1WxTXnN
S2WI1/ftvw4BfVvByzVMwj+psHvKg5E7ljMI/6SC6Z9gY9NEBmF/DQiaNAuN
zLD9SN7t799qcIG0XwDKR/iflX4wCfsFUGji8Xm7FUusj3hR/1lnQ7oiWWJ9
xItOfJT8o/4Yi7CnFgIHvXwatxbbg3hR7attbsfUOEQ+i2D98eSBy7NJ/4sg
22uW91YzjtgeMf8pu+v5hqfYHiRv/j1XcYIq3i/iReeZ/tZynckm9lsG7V5/
wzY4swl76qH6+qMf9hIcwv8NkFemETIgC9uP8rDw0gb5M0s4xH4b4aT1lCWL
mziE/4UQqf10U6E/aY8Qgp+8veBUiu1HvOiWJZ8H5HzE+n1+roKlnwacrZIn
620zXFaLyXv2mkP4swn0NhR4rJTnUrzolfVbbU9m8Cle9LxavGH+QXQfH/Oi
Ma9eqUvPlSXikg2H3b8HMNJxXv2nHpsO19qfxNtFMAk/pMLp0dlPXjYxCD+k
wuh3LhWscVgf5bNdWl3TH3kO4Yca0AiKW9JwhEPxooofDXOWnWJRvOj6GHOB
mfg5dsyLlky3ylVxY1O8qGbRubZSPzbFi56VaFWoET8vjXnRwQZmkz75kedd
HfisPKSeEI3t7+uztXBfealylIDMcxHEa+///vcJh8hzEZTpOhm9msOleFG5
/eH+ulvYFC/KiN/WvO8jthPJux8v9/vgwaF4UV+5hexdkzgUL6rwYFTW6nkc
wm8lkLa4Z6+7P7Yf8aKPjXJm9DhwibpRD871mdYDTnCJ87T3uj3bT52xg9Rv
hKg1ezUOaPAoXjTWxm1C4XQOxYveOuiq/DeHtFMIL1+5dOvZcyle9NHgMYve
/+ZQvGitbrStsT5XvI5E///jmUpYRLpzifxsgm6X/Q9uXSPtb4bdV8KHDnzC
E+NcdB7Nztoc1DYEPYeAedGsHSu95n6Uo3hRl99ZTkN6cT3Jiy7McNZR8cf5
jHhR+0Mt3xVt2BQvyni11IwTxKR40VT5KQv25zAJv6XCGlfeSqmhLIoXDdQO
1loow6V40XO7595vu0z6rQZyK1VtDs8g/SCACgmzGd3FbMIPAtj6ed/I9/aY
j0K8qJZfrkXmbI5YX6K/Tw3ODdtk7sileNHz6YGLhhdxKV60JWPmOZECT2xn
X/7XwKSXgxsuO/AoXjQmWXvvlFouxYvG21ZJnTvBI84vEVyri9onPZ0vth+d
d8sCTOUUWrH9SF7dsKzRZC9XrD+pP49WpGxNnnWAK9ZHvOi2qE0+E+6QdaAR
1u+xzF72iEfxokXqlbM9GXyxnYgXNXi68bW7A5/iRSfO19DqzOFRvGjhjSKN
j4fIdRphDXvf8BobGSK+QmB7ntNc/4NLxPf/vRfZ+s83EedDX1zew4Rc6VEq
ETyxPuJF5yZ1+OWV8CheNGJMypDZyXyKF+2o3PTAnUn2r0ZwDDOaH+CC3uPA
vKiE/98Rqk/lCZzeAr5xWVamsxXEdiJe9DVLPrjMGuct4kW5I/IllmuxCT+k
wpGmEVs1dpP3QVJBPjj+7rhGzIOh8yWxY19XjSSfyPMa6PgzsVTqFZ+wXwDF
e43XLGwieV0BTIn9a/E4givWR7yow7Zly0NsuGJ9hEeKJNfr/T3HI+ypg9ke
wfdzLvIJ+2vgbaGdm00Xmeci0Fpy9niPvAyR5yIoX8iaXFuH/S/GL1a7vQZP
4RH2lIC884DSHgm8X8SLapx9NW3dYD6hXwbmy1kH7Dz5xHnUAPHhDsOu3pch
8koEKrkXZ0UPlBXro3y2qf0XqaImK9ZHcqmeDev2dsgS/hfCxkZN31nr+YT/
hZC0zrJjvhPeL+JFPYy0mJWOMoR+JbhHBnduv4fPI9/+PqKZnLJuxHNsD+JF
Z5RkSqzRlqN4Ueu4nToyTAUx74HkxmMSGnwGYXsQLyp/L5rzZjPOH4Rfqt5P
W8334hD7TYWuZ6YhB5eSvFYqjHoUYDv4M+blUN5OLypVV72E94vkJx/rpyVF
y1K86OwvzYrmi3iE/QI4UX/T/ZAjn+JF9xVt7/K5inngvri/gVuLfsw928Mn
/F8H30t5Zbt2yRL21IKmWea6pK84vihvH3wceXVgtiyRbyLoeii7dfojOYoX
fTfpcHtGHbYHyaccv2eU+UeG4kWfHZ9Z56skI9ZHvKhJ8t+OEaXYHsSLso6F
xHyJlCPsqQfJHbZ3z8nKi/VR3n6VPHm8oAjrI/krkz81GQ/lKV60cSBjdf4c
WcL/Qpi38YORyzpyv9UQPv57VtJqObF+X95WwUXJ8vqZktievrg0wZ3pW4bu
Z5L1thlWOW1c+1tLgeJFDz118dVT4BHrZ8B1RmL5oyE8ihd1a1Q/UHGYQ9if
CgNVD/mFO3MpXnSa8dX1wyOx/Uh+b7Rkm/cteYoX9WZwhHon5Al7asHb+pTC
fRUFihfdMe1U3L3b8kQ+iGBorlqYr7sCxYt2r+ZOb87G+oifSVlf+bvqhALF
izpLJjqZOODzHck1T10fJJFD2tMCSRNvC1KvYX3EiwruGBTBdwUxr4LOu3Hu
13cyC6X644h50dFjPvL8FmFeDvGix2OGrOztVGJ9xIt+is8RvVhM6pdA0daz
jTfzsT6Sq+xqGDrPA+sjXlRtROzRwDysj3hR/qrw5AJ3kifsxdcLJlv3lJL2
C+GtIHtUfQDWR7zooM83tI0bsP6k/jyX7HlQszicXL8FnFduXJj1gOQhW2CU
vZUn6zrJ87RAteuwc2w1zHsg+eh3Hl8OuXDE6/et9xKSTGYF+xZhexAvOrhl
mJKuC82LRq50U3Z8T+43FfzjtH4VuNG8aNnNWMfi9TQvGm0VVHfZl0XYUwMr
Ps+2e9mE10fy8RlK+W3hZLxq4dNxHUOVdjIfasBAulhCMgLbg65DqrbYyC3b
SvOipm/vJ/P8SR61F+eKlpsl7cX6SF5wYXyb9W6aF5WQOHKrg4fjheSutae/
p2Zh+9F5tys9TfX+cKyPeFFXmZ6vTrmkP8tBcb77m0snSPtLYVPtoVdpITQv
urLMTPHtedL/QmiwF57MSyJ5+0Y4VK5Vlm4jTfiz9zrcWOAXqEbed2iG3szy
d9yI9REvavvr5iF1HZyffX//ANuch1m7pZL+rATPqdPble5gnhDlbXxma+kb
f4x/kXzh1E+7NljyxOuj64p3mcPk/mzE6/v2X4do7/Q6s86P9E8qWNwNyvcN
JP2TCjsdzvqu9SB5yBoYPiHnV2Y+1kfy+e83xSvUkvYLILnotco3IHk5AZy3
HTqy8jvmcxAv2ji4MZ3ngvURL7rCoCKjW4JD2FMLw5s54y9/xPYgXvTTr/fD
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
Olf/EZYjP08fN+raL+EACseh9+OOWukt9PnSTMn7rktfif12SWB4cOZLif7z
MVvstyFOTzVK3khYoO8+ID9c/as47+tp9D5UjtgP1w3Ka8J/SPTXn5cYp6ez
vo48L2GB3mNH/pmyPehx2gO0zmuxPQZBAV7qmuj9lCJx3HcozrtitVbSYnW/
/chvoV2+5krVEv37KhDHd+gpS7dIkLRg9OcT8tvWwqDBooGSFui7KmhfM9dF
vpBeLmmBvsOC8iF0378Jk1ORPW/E+3K/raefYInuo5WK7Y8/UqOdUC1psfL/
2FMLsW5LR9b5ou+GFYvzQV/aaOJ8IcJrZWL7P1pFKR7mS4n9gPLBy3OybnIL
em/rrdj+Y8WMv+0zpPr7LL5+i/FYGZR0GsnfiPPh78l6y805khboPWfknxPe
UQkmY/H7Keh8/Dnm9KeaJ8g/b8V++Lh7k/ZgLrKzUuyHRc8OXB1xR6p/vx/E
cXx6ECzHSEtbTOzfJ/LPMamY0IXHkH6V2A+Ml1fcNnVIWaDvE6H8vJlY47DB
Vro/P8vE/rH8cGjQvONSFui9fZQn0cb/slJ613nd7y/kt/bJijJys6X7+Ydq
sd/cz1q6jL6M8Olbsd+Wmktaxjuj7wVVif0gJ7Wg2iEN+bla7Lfp4xd5z9dE
77nUiv0w8Vf4vk/X0Dp1Yr+tMbplkz6d0b/fd+I8SU8zdFd3krY49d+/34v9
9jh3wIjaxwjf1Yr95nLC4d06HsIRlWL/5K7SC3onkrZA3wVA/nHXV7i0eh7S
rxX7Z+6cu1e7jqL3X/B1y4bib35G3Yz+PKwS+4fjm6jzKAbhympxXr2IfzVZ
nYHuS+Lr5wPazcO29PoTfc8O+dNybnPSr1toX/Viv8ElO7bSO2RPndgPV7/t
+phrgNavx36IHsPYvR49b1wn3u/Z2zmmJzqYFuh7JWi/OqLjzW/1EQ7Ffbw8
cabu3mRW/35r8XVLos9cSTv0XHGdeL9OM5amSWSxxH0T7XdE3otdo5cxLNB7
12i//GFabQcFyG9NOB+GnD0i3Mbqz6sG8X71maMcQyQQvmgSnxev/yblnL7F
EvsNxX3rzy15RXPZFug9f+SHsn1n7I9XoXWaxX7YIKEyI246p3+/uD9Wbb/8
808HR2w/8sPEzT+irBbi9+LRvtDcefRdPOQHNKcefVcC5bnLT9ep7VvRcZvF
+32UYL6obAy33w9NGKenRJ2WruKIr+vQfsumJQnnyaD395vEdt47qufiMADd
9/mf51ust2R+fMCj+qNW6o9F06OZVH9Ue/vS366aSfVH10STO1M9WFR/HDav
wlWtFuFE3B8Xn1Vftc6PQfVHp72hpjMLWVR/7OpYme5Ty6T6o+omwyEG75hU
f5wg1K51WMSm+mOTSGLCgj0sqj+iOddkf9S4FHtPYzCb6o92Q77oXzFiU/3x
uOXoyzc/M6j++GaR0yjzSBbVH0OftVkuOITyEPdHcwfV6umTOVR/tJNKYR+e
w6b6437zS1E/rnCo/lhmMHbTTCaH6o/Pni784zKGQ/XHkF3G0/KqOVR/5JQF
vgnS4lL9cZBVivrdbCbVH42rtjv8PMWk+mPm5rEpQj+0X9wf4fKOt/W9crI/
ojm/ZH+c+0a+4rEVh+qPP4NE0VeXcqj+GBf2aaadN5fqj6YmTTbeCVyqP6I5
tmR/RHNsyf6ofc7/PDOaR/XHhcZljqazWVR/dPjrq2k0GvkB98e/Lsv3Dh/B
ofrj97TRD2P1uFR/FG7p8ncWcan+qLUt9+5QbR7VH//vXFTcH6/YxO4uEPGo
/shumiiVN55P9cfLY09MrbqEeBjcHzO4e7adaORR/ZEbNzl+Zzef6o8r7H+Y
Hp8jQ/XHfO+LHiaL2VR/5Ad7VQnE5x3uj9+HWyTN2Yp4JNwfHbYVeuwWf+8I
98f1R63O3tbnU/2RuVC3mMmWpfqju/XO5EuHZaj+6J5QdWHWJxmqPz5aU/lt
c74s1R8rj33c+2KCHNUfffMsJsfu4lD90bCr5VSZL4fqj398Juyse8Gn+mOX
Y8gl5xrEh+D+qPp435mk+TJUf2TdcT7tmChH9UfJuGH3/6kjXgv3RyfHyjTu
ZzmqP/prP313eY881R/3HcsZuPKjPNUf0fxBsj+ieYVkf4z55iTaeVme6o+/
nz1X/qCpQPXHX66lnpeUFaj+OEHlumlYpgLVH4N+nfvWWa1A9cdTW4b3bBuj
SPVHMNDl2bdKU/3x5SDtm2e1GFR/vCw4/H2wljTVH49XRCZPe42u63B/fPV3
6hu+pTTVHx3PRXVnJkhT/fHNn2Cfkc50fxzn/oVTYMWi+qPlYdmKdQ4Mqj++
/XmtY0kKk+qPdv3zzsj+aPvIUWuQNovqj+NPB71+o0r3x2DfRa3THzOp/njn
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
sRSg62r9fqsKGabtSe0hny+7WH7urLEQ8Z88uJo+bEB1Lu7fnQ0pu664r/+f
Ptrkr7lT/xbQpn2ryfq1WWg21roL7VtN5IlfOxgcWYLlYpi0w6Vn3GWsRwyn
3xZ+TluF+2JLYKfnkyNlF6mc5PO752uH3K7A/bIlcHt1UNCIWion4wf+mymw
68NDchWsuHfeOWEQn9NP8nD0/CGZ7zvS8UTuP/LQSY81uO926/f6Xy/WP4/m
Ifuzod3Q71UbFtD+4ESet/rVmD//0yed6Bsxfsnzkqm4z3UeNE72tEsPoXKi
J77jTDObztQ/xJ4T3UvHN8/mIT9L4ZfFvfqOe6n9RL74yZYPFRIe8rMMhJ+X
N/lfxf3QxXDoXEqGxwdqD/n8htme9iOVWC6G88tvX0wZgfUUQG7VFFmvszgf
5GBpNHDWpCocLxnoduklN+LrIPvl4Pr67qA60EF5rgD78reFRw1w3+1SmP+0
8c7VpzwUFwlUKPcmTxmO+2WXwjybNOtp3rjftwQ+xe6LCgnAcVeC9/jM4DVj
qZ3Envt7HvgnelM5Ga/QXpd18xa1n6zfG9c83abuoOPxfmnMOUNfDPm0cK6A
s5/kbW3dkjNt79DrInnidvOcx5ZGel3cOfC9v9b8NNJBHCAbdCYeu5S5VBvF
UQqxwg29Zw6h9nDPqb7ZZ1/OxX3GpSA5nDJhUgTVT/TVTN3j7TYU95UWw6v9
tzWUgbifeAFc+P7c+6U/HU/8pNd+3gTBS9zPPRusrnXynhNL5WR83sMLE7zM
eMifMjgisIyVVumgfJDB4oev9kZt00F+kEPagU3PtyTi65WDaJFW14O9+Mif
EgAo+XX8NbWf2DVdEKsYbq6D7JfAB6tLs+fZ6iA/iKFoytYNUhkP3U8U8EQ0
N7/usw66nyigW+XbjhpufJTPSvjXJn3hrXQ+WhdKOFZSdv/+UNqXnPue/H5+
y7qD1A9cXb2TeeS8Fx/5TQWVvOkzb9+m83Lnmzn7V676yUd+UEHc8fzT+c20
bzjJz9tqXqb3NtP8IfmWIVqdMyCd+of7fTPq0IzxVToM51Q/3KSrtYD2N+fq
YPFjM7/LVE7ypGXu/oo/Q3HeSkF7it35k5rUP2Se+pcufa/24aN4SaFc/VuH
PXv5DOd0P6xRHFSJ+1mLYa7gXvKiMToM53xmq1vi0irHnNNzSeOc4V9xP+s8
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
a0OaBrJfAob3XjjojqVciHveFbQ9E3UCy1XwbFJY2KAL7H7OObBYHmVIxxP5
nSob/oR6Kid52PNd6Iyji1nO6feoapg8F78Hmg2OJ/wtHhfj90zzwEsW+lnD
kHI57r698teLbTFUznHOzhMUAdOpP4k9QvFdh45bsJ+lcPnI3Fc58dR+In+9
s+meXgbLOfv/s2P7Xe69JMo5NVPK3Nb9jz3c9d3c2flTNZaLoeOQ8+VdF2oh
PQXQVqS+OWIetlMOxqPmje7shLm0DD6driqSWuB9wnKY9ObJRpckbZTnCpj6
eESH4OdanD0kHyZP++J02FYbxUUCnUwXrInSoHaS8UL3qOsWjlrI/xKwiu5a
PPsOjrsSFN8sfodPp3YSe1Ir7rj9GEP3qZLxytis8+u/UV7K/U4a/jXI6AfV
w8n/O78Ic06pl+yG6KcuZz/J2/S7Ky+kFdHrInnS49FdpeYYlnNa7LmqpUjX
RhwgG5qTx1m1pOF8kILWrpdRtnks5xRa59zuOJHlnEH9XB/4KFnOKUl9kuwf
poXkYthv27A5UZ3uwyTjRZt7DHw7gNpJ/NSvvvSItYkWN57YP/PmONfNA6mc
jHdJGCg8kYbzRAbdZomj38axnNNBarx0kC/m9nK43PN3c5KQ3c9ponerjLeK
3c/pHTaybWUItZ/YldlTbbbMmIfsl8Cl4WfyjRfhfa1imLZ5zi/HXPy7iQKC
NRy01rxg93P+ea/99raFAOVz6/e+31f26HPcgHLOwPWeaS+Osvs5N9d6FPG+
Uz9w7zHd5E1yXCJAflPBnFTB1QsLhdy8ZPyjt4uCwt8LkR9UUCrdPPXuDj1O
zp3DcyaxvvomzR+Sb93CF3ybNo/lnNtGqWaoXWX3cy7p1H5+0Hb63i6Ru3r8
Dn79ncpJnmi+eBVml4TzVgoTBz/yCVdn93NGlzsWTnNiOaeqy8RgB0vMKwrg
RHGqmWWdNsM5YWxNV6tgHsM5+xw7nJURw2M4Z9rvFz5/CrQYzlnwPcOkx0Jt
hnMuTwm/k6TD7ue8ebnNyfo8dj+nw3/ndGHOuWKb+PF4GeYVEmjjtWNcsy27
n1Pzd7uesnp2P2ezXdrkxSbsfk6LWYnXhzmy+zkNYubPeejO7ucUdahLOmHH
7udMn37C6spuIVqPSjjoPCL/9wZddH9QQO/T03XdCnXRelTCWOdq8yFPRQzn
/Ga9zmuDlN3PWe/FP6kUUf5Jxh9pUe1UNVDOTNbFhLisRelrRdy8RF6dVri3
c54eiosKTr/RaX6Tqc9wzp+/OhYWRhhy8xI9bSKOiw2vGSJ7VHC/ZnF9mcCI
4ZwuTnv+rEpk93NeO+2avsGP5ZzNPdT40iyWc/5ZYXg26Ajet0z7o2HOOfG/
89kw5xTFyirfHKD8Cp/bhjmnY7/tlvMe6aI8kUKPfzymTr9Dn+tJXnVPGl5t
uJbdz5m5JSjGYIQAycWw59gnC9uReF9WHoxxSv34bj27n9N88JNzD6ey+zmr
THTiVXbsfs6QhDUzv4zTZTjn6aNxngcH4jyUwcVNjanLvEUM59RwbXdtiKse
irsMBDNcmnQS9ZB/5JAxrU3Jkjh9FEcJPNRt4/O9Dcs5Sb82zDmdm+u8jEcJ
GM755vXV8TP76DGcs/pWQt/xFvoM5zyTccXde7U+wzlbHkUqti0yQPdtBdwq
irC4etwArUclNISuGiS1M+TsJOvp73PzKOdcY5dWzDMVMZzzT1dlslV3A4Zz
OvU8cvKHriHDOTfdE0SO7G6I9KtgwHj3TRufGnH2cOtPo7Cg70/qT25/xfhH
73p8pNyJGx8fPmGYGX3eJ/m2aKyofJAxu5+z/aq6LgNq6D49ot8+74732M76
KM+lYOP95e2HNnQfFFkX509k3gmcwnLOU79s8z50ECC+kQ2+5U1OvBp2P2f0
Re/gsV3web+tz++ipCU/K/WR/XLo/q93Xq88A+RPGRzKe3Y99LcBsl8O8b+v
3B/rboj8I4EAxaO9ueMxXyqFnOvTfvpMxXxGAn03Wr/je+D9dQXQeeUi+71j
8H5CMZTtziq9DCzn3C2wGvfBjeWce3ZZ1V5yMETrTglmPyY6LXxgiO4bCri4
1aTjz1JDtB6VEPm9/+4QKyNuXnJdP3sMKDuwlfqT5OftilUdv3cyQv5XwSrL
vsOythlx+rnzVMun2w0MNEJ+U0FyzOmtW/WMOTnJzwXWR1Yl29N9gNy5Q7I8
8fKpNK+439eKznmU78b7xLLhRXzlmK/v2f2c5FzBv/0vhYtLJNO/djLk9JN5
h80fG5VsbYjiIoVYp5iDBv+z34zE189wckq0M8s55cZvFKkHMC8qgBBTbduo
C+y5weRcRMw5v/l2a+y/huWc8jerHcsOGKLran3u+OH7/c1HQxRfGUxeHvhC
XWiErksOi71TH/yzxAjZI4HM66nfx5TifYNiCP1ZbLi+gMaL/G302uE9eiKN
O5mn5nNQ+YtTRmhdt+Zn3Y0xeYlGaB0pwXHJ+Uk/6owYztmkuUEdTuoznDNK
erzbq7N4X2IptEmNvzfDmfqH/D/va83pxhI6L5EfOOrSbkBPY+Q3FTjsWq4h
nGmM9KvA9Gxq9bj8NgznLH9uet9uriHDOacV774RkUH3H5LxPdrteX+qCueV
FLZ1ao5ebk7jwv3Ou7i53GWyEYqLFD4b9HqYFGbEcM7csvQW/a1GDOcsqVfV
b39shK5LBuNeKHq6vMX65WDkf2i4bRdjlJ+t8T8Ll7ZMMmY4Z+7evdH7WnAc
ldDRLft4nA0+F1QJouqBk+w8jRnOOTlm3+qyf4wZztnmkO/cf49TPeTzEZ0/
tfWINR77/wAvGQeu
   "], {{
     {RGBColor[1, 0, 0], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
1xbVsc91Hkhbnd6E/T904Wym
         "]], Polygon3DBox[CompressedData["
1:eJw1mHmcl1UVxt+r72/mssOAIJMsAyiyupOMIoilaVluaWYioKa5ZoaZG6mp
CBayKOGCgqJsCqioCIKSiOCCC7vJJtrmUlnZJ7ee7+85/XFm7nPPfe96znPO
+TWMvPSkS3YriuLYVBSl/n+qP/+WvJKL4lXJ3pLu0tVId7/69xPuL5mn9iOS
BrUbpG8m/VYNaivcUriFpA1tSQvJdI2dITlZ7eOk20vjP9D459TXXu3h6vuJ
dO8L7yt8ovAo4TpJ85j/Aenuk0yTdFR/vaSLZC/pvybpTFsygLU1/jGNu0dy
t2R/9fdT/1H6P0T/B0uGcjZJN8kTGrOo9F5rpGtaeM/7CHfmPMJzhF+Q7Kl2
O/UdGN92Vbuu8BwHCPcVbiW8U+d7S30d1L5AfT+V7oeSH6h9uuRHap8iuUrt
qyXfjzN1jPU56zeFjxJuJ/y0cNNKUTSR7FT/u5KmkvbSNyl8L/TtFP56EWOF
K8K88b3SHy08lPsSXir8Uuk2fcdkr/GU5BvZa/9B8rZ0WxC1j4374814O8az
t97q6yXd9yTfSj7zRzp/z+w75O7mSo6LOfj2ecnZao/U+LMl57KW+nro20uE
Lw0bfEXt/cI23xfeJXyocEud7wThA5LfhLf5UvIFc6t/RbZNYVsjJBeqfTr3
z5wa86rk1Ox736D2RskqtV/U2P6ar9D8bwi/Lnyw4G7Cz2jMYsmJ6j8pew8t
JO9l7401V2j8QYX3wpvz9hdKLlN7lfrqC9sAtsAeOgmflry3TrWyYckLaq+U
NIs3nha2z16xlYbCe2ZPSfJ69l5Pk5wq/R7Sr5B+TWlfw+e+I91fhPsI3yB8
g/AC4dbCddiY8PzStnuM8PHZQps35W0fkr659L04Y7adHJlsP9jWg6GHA+CC
O0vzCnywh/C40raITTbP9lF89RThAdk2ge0cnWwr+K6uo+iT7MP4aFvhbsm+
uwMfFR4jPE54Sll9tiofdM3mKM6DT8JdcAhcAmf1Fm6UDFS7UXI4tpvNDdg4
dsoZOSv2fcj//QGf0yIdJG/XmBvgILhoi+bvLnyr8G3Cr8X7XiN8s/AXGt9N
eLTwr4SXlX4r3mx4tm21Cz7Gxp4Vbll4T+xtrXDnwvY8Unh1+G/Vh4Rfjve+
SPiKbF/mvngj3mol3Cl8hfCZwn+qsS8PCW6Ew+Cy6p3gC2Gv3M9g4fXCXYUv
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
E+B3Ygax439lN3Yb
         "]], Polygon3DBox[CompressedData["
1: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
JOWWYA==
         "]]}]}, 
     {RGBColor[1, 1, 0], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
2f815P+9DUNH
         "]], Polygon3DBox[CompressedData["
1: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

         "]], Polygon3DBox[CompressedData["
1:eJxNlvd/jlcYxl+pp3kfHWrUaK0QI0uCCEKEDEVsIpEhVhJBEqTETgSxCWLV
bu0VbdVqVWn5W6hqdaB2v9fn3D/0h+8nV677ec45z33uc78nbEb5hLKQQCBw
ADxI8AOBaIx+oYDuD70gDnpDjMX28/B59Bm8k+hT0Bfi4R28ALFInmuMftMo
EIhAe+h34TycgwtwkedmEotCR+kdCIe+ePPgNvoW/CR4ZgasRGcSm4meBcXo
7/C+QX8Ll2Ef69gLV+URO4yejM6ELBiPl8Z7CdAN3R2vB0RAjsXTieWh82Ed
rMargQ2QRSwcrwt0FbbmOcxTAtm2zkl4xeip6AIoglF4Z/GOo3fy7HE4AfPx
ZuOVwHwYy3O1eOttvvXoDXAJGpSLULcHX6OHoSehW0BziPXdGqrQ1bDKcnbR
cj4LfZA5D8EQSIZxnstFJM+UQ5nv1lSON0Z50veiO0M76K28491Dl6MbeP8S
pOKlQBp8RmwIsSnocZZz5TcXlsJkrQv2Qh6xBXgL0QugzOb9nDErPLcHykUV
eqT2Hz0X5kCpcgeFlt8S9BxYYuNVwDKYSKyM90thLrF5eKPxlqOXwQqoxBuH
F0S/h24CQYjBW8V7tejVxOrQO6Adug/eIOLt0R2gFXykfcBrjW4DydAPr79y
AsnEVuIdUn3CQdUI3jDGTIePbdyBeM3QTzhH/0BPvAF4LfCaQ0toZnPF8F40
hOqsaS50DfqAjb0GvdZypVorVi1ABrFReGOUDxhm+6Y92ofOR29hrK0wT7mD
EXgzLPdVlrfxeDXE1sAE9Q68OFgCE0LdvumdAmLTYDqkq1bwUpVDSOKZDLxR
WheMgBS8Jni+9kR/bT80x1Lb14noSbAKFtseal3Vmov1FFgPUB0WootUL747
n4WWg+X4yzy3L8rZVNWkzqbnakTjVnquTsvtjC5EV0ASDFLN42UTG2y9Rjkd
q++3nlKpcaw2l1peohgzEt4GXb/soxrFv2N97wL/X4ReeC3xWkFreBl0+6Zz
NpTYaM2nPbY92I/eTWyz53rERK1FOVCPs9wnaa2qO40Dw3VeVXeQaN9xAK6j
b8A1mM0zI/QsjBS2RxmmU3U+mXMWXLceXIh3A/2973pJe+0t8RzI9Vwv7o4X
AT2sD6neVHdHPNfj9+LdhB/gR6Hzb79V+m3qj55qez3Qd+vXdwy2b0zEG+C7
WJLVWjx0RHdUTlS3ntvDLLwcyIU+xN63MxVN7AP0h9aDz+GdgbMh7vcwHO8B
e/gQfoXf2aM/gk7LewRdrS/o3Mbp7DHnaNUneh3eGlhrfWYgfqLnzrt6ylDr
DX3RCRBvvecxc/xmY/+J/gs+4bm28KnlWz37b/ym6J7oFPVrz/WXWO033mT+
z7Ie0hjPg1D77qCdvUHqwZAB3TUf8z4NunVqvc/Q/+I9h2fQg2fStG6rWfU3
9bk0O/vpMNxq+DXxV9DNxn0TdOfiFfo1vLX7RBjvdlKPtP3r7Lt7hH6LxzJ2
HuRDDF409LRvVO88ZOciB30YfQSea81Bd8a0zhe2hsfqu+gnQfeNAd/db6KI
NUKHaE7mCffcPmsPuigv+j2FCM+NoW9ajF4E23lnO2PUeu43+RK6AS6EuPtQ
J/yOlsenvBuHvuW7e5DuQzet7u/i/QL3fPc7XIa3CF2KXsg71bDa3tVZmat6
1d1Ndw59N95ROAnT7XxeRhehT/PMGfV8vC2+q0399m3z3f3lrNX9VzCN2HG8
L9HH4CqU4HXm/TDoAPftLNTZt08hvgO9EzYQX29rOkFsF3qMnQndP3UnzbS6
VH0Wea6Xxdr+d0C3gbZ2jnfBNvQ6nquH3Z7ra9l2luN1fmATbITN9nx2qNub
jehNUGfr3I1XD3vs91B3lTvo2767p6pP/2zz1mv9sNXG0x3pC/R+uGt7dAzv
qPLlu3ug8nfSvl37cAp92nf9e5/e19z/q1fpXPQeu+eq5yi/D1V/8Cjo7r5X
4Jrtqfqv7spX0CtgufXT+1ZjOqMP1KeC7g7/Au8lNLJa/w9nTFbk
         "]]}]}, 
     {RGBColor[0, 1, 0], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlnm0T1UUx693/X7XvUUUISFSxqUomdayUGiVTLUiokhKrUzxzIV4nnl+
POPrmUtkSEjDqrVKMhRJVMYy1jIrFfX5rr3/OOv7vd+zz7nn7LP3PqdCt97t
emUEQVCgQBCEYJIOgvaQzkkQFKE9CJ8eBcF/MQ3DN+E74NvhfeDHUkGQxqYg
ts/TXoLnuz6P+c6Bv9Fy4CPQs2klsPmXOTaij0bfBNZBy4NfZt6YeSK+R2Gb
D25EzwOLozcAZ6J/RFsOX4p2ivGzsDkKvoF+gzlS6CMjW1sC/5m+udj8Ae6h
TYYf1/+xKYJNMWwmwavA74bfCy7GpipYhu964IzI/p+Pfid4gz3IafLJO2p8
Fknbf1PoIePK0ur7mgvBC/m+xtKmY3+ANYyHl0O/g/4J8Lvg5eBv+dpuh0+G
V4dXg49z+0puXwFeHj4E3MScy8Ap6AvhV5m/Ymj+17z6V3nwnsT2Ph/9Ajal
0RYENlct9jATnIPNh9h8jN4obeM1j86zpsfGNfhCbJ6BP402P7L46ZhYLC3F
viA4F701eiv0+xM7b8VVLm2J4g+bZfBM9EH0T4XXgtfxvVeDV4E3oj0Mn4X2
Pf+exNhd4F8ps69Hf15kZ3QdrTzzroHXBs8RF9nwz1Nm0wX7JthPhFeGV4S/
5jFcLG1zyieXUnYWhdGL0r8SPhg+AN4fXIVNL/Ap2nJ4p9DiYRjYFZseocVG
d8UKbS18OPgQbQV8EPg+9lPAiX6+ZeGl5YfQ1j85NF89AT6JfiNle5QfHkNb
Bm+rc2XdY8CR2JRLmz+HweeBm7HJ1bzofcDe6OPB9eijFZe0dfA5Wofr6m9H
WxTY+b1KWw3vC97qsa280JzaewwuicwfPXXWoZ3vA+A09NraN/rb7v+68JZ+
pjloldL2X/lf9hrXkP4Fkfm5RNpirAN6F/RFkfm7dmJx2FHx6/Gjf9WHz4E3
hzf3/z4HbwpvHFp8tgDf9fN6Fn2227fwsep/FJ7i363gj8Mf0RjGtlRfaLnW
DCyFTW/wFWxeAN9D7ylfob8Mvog+Q/+QfyPLtQ+wqQ5uVM6iz9e+aIuVz2gr
IouR/tqX6hS8Bvb5brOZ/i2R5f0S94n80N5jVfGjPFB9Uz2r4f6UDzsltnfF
YzfNF9k6uzvX2nsklr9t4G0US5HFWlvn0lsntk7lRQf3lfxzG3iAOnmV3Nuv
uptYbK32NauGz0ws9wfCh8OXwzeo9so3kcXjUNXz0Hw1Vn6NDLM8f1W3qyem
Z8FHq4anjY+Br4osxkfAM+ETmGcb6/mGNhb+GXjQ1zmc/qG0C/CLaGsjq4c5
jN0QWQ6Ngn/JmCzGfgLuw24P9v0i+69ypAw4mO/T6Kfp/wK7UejrU3Z/fQpv
ik0D2tbAznRpZLnZi/mbpM1G55uX2F2oeFCOb0GvC66LbGxD57OwmZ3YmsVz
4Wu8tkxKrM7oPr3P422RYtfrvPiCxO5a2SgWM/nO8Vgt5blZ2depGtDHz0tn
N9jjWndQZ9UKr316D6gmKC/6+VmoRo3ztam2TYD/4j58PbLapdwpCZ7IsPv6
FLgjw85uF5iFXVHGFk4sv1QDo7S9U3QvXANvUnwFdh/v9fqve2A3Z3AGPBMb
n4H+S8ru59l6B4F9I/vPt9hcAceh/wkOQD8C/oo+DH4Rfim29Wjs6ZS9F3J1
LqHd9cXBf2Lrk43uTd1firErsb1P9G75G74PnIrNLYwp6fPozTRE5wjfl7I9
nKftie3+037lt/60/eg/oG/weFsLNvaapRqrmNTeT8b2/tA7RLk5UO829COx
7fEw/FBs+lH4Mfh+94VyJAzNb9f53uxvua3+BpN2LTYf7oTv8vee+G74Qffn
j+BPfH/nubMT/rW/LcdE5oObvSarvjaDF0js3TXC96s5tsX2DtQdXYL+QZHF
y++x8ZPwE7HlrPZ1PLY3nO5QvYfS/ubUm3C7r0F+q+HxoPeHzlqxdDhluSw/
f4VtpdDeurqzs/2sL8d2Xjqjc/C9vkf5Z5rnlN4kU/xdVxWtK7gysPvpLLYT
A6sdQz3Grvq7W/GvPKgZ2vtNbxfVMe3xrGIpw85UZ5nt98Vq96fy5Tw2xUJ7
b+vdlunnexj9kOeO4vt/+iagYQ==
         "]], Polygon3DBox[CompressedData["
1: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
JObsjd7qf1MFt3U=
         "]], Polygon3DBox[CompressedData["
1:eJwtlnWUVVUUxi8z3Pd4l+4UHCUHlG4WjYRIidLdoHQMPTCEMEN3DS220mGu
5VrSIA1Kl6TSJeHv8+w/fut979vn3Htin31uTOd+zfpGeZ63BHxIF/K8tNA2
8LxR0Z73RdjzpqFnoL9DFydWAuaja+FVJVYNqkNeyIGXE2IgkTb98Pqj16L7
owdAhP6poK/FcqInoOPR42AyfE37gXj90DmIF4LCkAcvN8whXpHYa+g6UBve
EXgLiLVEl0eXgzj4DK8rXmd0F+gFq/E+wusDq9A98D5G54cC6Px6PkwhVgGv
JHqm3ouuBINhEAyB4faO+eh5sEC/eOvxaqDbo1eia6JrQWtoBW2gJbGlxCai
J9ncJ6EnB27tZ+m9MB2+JfaCjXoO5e25K/CmoBPRU2ECfIVXEi8TOiO0gmRb
0yHowdAX1uAl4k2FJNtnvaMoujj6bSgESXixeG+hi0GsxhN2eVAb3RDe1S9t
ekFP6G37p3fEoYdpnfSL9yneRliAbgdtYSix19njfFBKOWZePIyFcTDR5tYE
/T66GTSGxXjF6DMN/QmxiuhKUBZdBspBKdu/N9Ax8CYUtrkloBPQ42EhbLY1
1fsK8JzyUAFyQy7LV+1VQXQnOytf0qczugu0gxa2r+3RHdQGhtrcR6PHKP/R
uzmAeyKetxf2wQj8xbRbAotgk+1la/RydCl0aY0dCkERKGr7EWt6BvoROfLY
d/mquc/Cq4yuAvfx7/lufZTXTyyfOqI7QQfL15uM5y/GF4e+hb6t/3AD7yB9
zsBZ362v8qUElLZ3zYYyyiHFoETg8kprPk37pXwK3F420XzxmqKbQXNohOez
vpkhCzTCew8aW3vteV078wvR9dD14RXjeQnzrEY1tNpQDV0d6lr7q8zjCvO4
CtdsjnpefeL1oI7Vkg/xPtB+2h7oHLWw/GsObWxfUjLG6JA729r7IOTqkGrD
52GX18rvxvaOBtDU5n2HsWRAT0JfZ+w34DTenzAQ7zDjO4M+gf8I/Qf6JPqU
73JoD94+2Av7iR2IOC3vAAygzSB7zjFi++l3AA5KW/x39CE4Dqf0DjgJg9UP
7w56BPoY/Y7DaPRDvMfwxMaUMeTqaEedL3R+CEMo5OpvT2KZ0N1MqwZ3R/cI
3DlRLVyGl5U22SAFeNBAe6/zQCwePPRL3neZcVzRmqDvMYZRxM7x/7zNT/O8
R+wusaPoi1pT9Gm4CMNofxbvDPosnIcheOMhlfYQIoL3P6XdE3gGL2k3hjZ+
4PRpnn0b/oYAL0Sfi+h/4I4uVuUl/cba2FPwPw2khrSB2/uJYbfv2v+nvjs7
6Yg9oF82dHbIqvoWdvfzGPRYGG21R/dWXt0B6ALoglbjdJcVhCJ27r6BJLsr
Eq1ebsNbpbtE5175bHdid3RX6GZ7eomxnLM1uqzzA1k1B+IJeNnQ2WEX499p
632B9kPDrm7cQt+E6zAc7yfa/Oi7PdBzf0Ofsz7am/PScB2uqe5Y7VHfX2j7
s+/OsWrUXt+dlUPoI3hHIy7Xi5I/sSF3N89lnCXRc9Hr0N/rTuZ/LViJt8LW
YjWxVeiF1kf3+CLVZc3PcjPO6nle9Hbro3Wrzv8aIdde3wAbVHf5XwXW4K2G
tfb+HcSSA7fmWvtk2GJ3o+6/WcRmwxzdzTA9cPune24meiksgWWw3Pomm96K
rso7q4XcfaN7dx1eEVuPjazXBt+d9xOs2a/oHbAdfvDdOqr+bEZvgvW+u6tU
X3ZaH9WGXejdltuv8J7Csyh3PvWN15v39oEB0e47UN9uFdCVoYrqgdbYvuek
M0OWwOVSOrwJxO7afZULLzdeHshnuZ4TL0fgYsp/fa/peZWsndrrO/GC1YUM
lq/X0Cc1j4irZaqrp9Db8Lf6roaqNm6xOqt6q7OYhb6TaX+E/4fhEoStRvxf
a+C+1aORVtuPq+5Cejvnqi/qE6JPGFLBv/Zsne/n6BcRV0vS4KXWXQjj7F4t
i37A8+5HuRrx0Gqc3qda+Bii8aMgpdUj9dXc00NGW9sEq2Ep0dHwwuqazsdI
/o/Q94rl6X+xSZHt
         "]]}]}, 
     {RGBColor[0, 0, 1], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
2Yn1Ys14iyLrOzrLyNTmB80MRej8C3tA4nk=
         "]], Polygon3DBox[CompressedData["
1:eJw1mHm8VVUVxw/cw76vczSkzDTTQNNUNE0jy7Q0RBEFDAFBxRBSJA3CCUFB
wBwazEabbdYYREgQQQYfPB4CDxBESBlkRgScGJRB7Pd9v9Uf63PX2mvt4ay9
ht++rfoM7DKgaZZl7ZtkWa7fK8ss6yrmKlEn8XNSls0W3Sd+hOg34jfJ7ivS
f1XyDyDxgyDxF4suF79FNv+S7VDJ90oeJrpX/BWiTuI7ii4Xf5Wop/g3ZP8X
2f+3yLK1lSx7WfIAyfdL/6D0H0iel2zzuKhLzF0h+1Wyf020XPxq0RrxqxkT
P1e2b2c+I2f9q+Rtkq+X/HXJL0jek/mMnLVOc+Zpbr1otvgJMR+f4JunJO+U
3Fty39Jn4myDJd8m+e+S35R8qeQOkl/XGhu01mKNfVe66aLd4m+T/o7SBH+7
6K7SNn1FawvPxfd7ZT8q9x1cLXm+5BVa89nCPvq+aGVh33FHP5Tt+5nvDn/h
292y/4R0tbFef9ncJHmI5BWSK5KT5N9L3iy5reS2pcfQ5aIa8WeIzhL/umx+
LNtjJLeU/DnRp0uP/Uh0etieIzo3d7ycLf4bxEju9c8X30Z0nvh1Wu9nmvc9
0TLxM3Te5/Q9syQfzOyfgbIdEP7Ch88n0zR8ELoTRCdKf4KoJf4U3Sz+LdlP
ld34ZP4KjV1Seu4uybfmXuMJydszx+elkr/DGrltpkj3dMxnzf7SNamRILpB
fJ/SNs+Kro+514julu17MpvM93HO3DFFbHUW1cHre/+j7/2W9JdI3050Yek9
GvcS3cLdih4Q/5HmVLVvL8k35I7Ha0vvMUnUM/Y+TXSmdF8UnUquJufWJu23
Xvs1q/FarDlS+r9F/Db6UPIoyaskN6M4lF77XbFDc+/BmqeLPyP3Xr+O+tBC
8mH4QHKD5Abt95L2666xbtJ1F/UoHStrpT81d8xA8KdxZu5a+uXS79D8tzR/
SBm1RDRY/J+k3yp9G8lfkjxf8n7JfXPfx6xqli2SPEvzp2v+I8mxe470X5b+
IclrMsfviZL/kFy7Wks+pXRMEptHSW4u+bjSsYV/jg9/c7fcGXfHGqxFTpwk
/q7k3KcGbNb+j0peL/ki6Y/iPiWvltxc8icl/yPi7yRySnJ9ci6T06NKEzz3
RSys1/dtyHwmzsYarHWE6FPifxv53EryZyVfJ3mh5DqdZ17hnCQ2iBFylbjt
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
         "]], Polygon3DBox[CompressedData["
1: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
uhvqTnsZPd9qdoDOcxhota45/w+Yubks
         "]], 
        Polygon3DBox[{{2931, 1161, 259, 1160, 1158, 2054}, {2931, 1159, 2055, 
         1749, 258, 1751}}]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{
        Polygon3DBox[{{1115, 257, 1162}, {2056, 260, 1750}}], 
        Polygon3DBox[{{1750, 256, 1115, 1162, 
         2056}}]}]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0MEyglEYgOFDCSv9Ff0VM9plV83UIOEOVMPC1gWwYYFbICMalOE2mKn7
4G48jZnznvf9NmfOfOWzi975XAjhFPfJEOa5zw9I6EcewAlPrmcMsWB+4Vek
9BuPsKjH/I4lHXk8g7TOcg6xrnEdm/qIO+iiYr7kK1T1iMfY1l/8jUO94QPr
ONAlLmJfFzhGW+d5DavYM+c4i5bOcIRdneYV7Ohf7/+gpqc8wZb+5A+U9S3f
4BoF8wkfI9JNbmBZx5zHbL93yf/9/gGt7h0N
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0MlKAmAUQOE/wRcoyKUZDZLZBLWvzGGXQWHZIlvVpmFnaelrGNSibLRp
m4/VALXrAxeHc+7mwr2J3cO1g74QwiaGoiEscYKHsaxHeBQZPcbjSGLFPMEp
ZPUkp5HTUzyNvP60/Aur+pt/UNL9kRAGsKNneBZz2DOv8waOdI3rqOoWX6Cp
3+1/Q0O/8gvO9TN3cKaf+BEPqJvv+Q41fcttnOobvsaJ7tr/gWN9xZfY101u
oKK3uYytSO9vCzyPoo7xIAr6z62/WNTxaO+//22tKGA=
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0MkuQwEYhuEfqT1NWLsIqlpT3YGdhAQXUHuSSg0tO3bKhh07Y3TQgVsw
JHobJCw9jcWT9/s35+ScsfWNxXxfRCxxl4jY0Xt9YNd+1Cp7dk3rNNh3N7VF
yW5rh7L9rC8c2K/9EW8c2e/6wYn9pd+c20MDEcMkuXRPaIpre1lXqNqbukXH
XhiMyNG253WOlj2rMzTtac2S4ck9pWka9qSmqPfep+PU7DPPP+XG3tYCV/aa
rnLRe65myVBxj+oIx/avb/rh0O7qJ0X7NvH/f/8A/u0ytA==
       "]]}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0Mkuw2EUQPFLpa/AAokHIdEEjSlUbbqoxAOw5wV4nyKplVmNLW3ojh07
U6Lm/v6xODnnbm7u9w0sLueWOiKigNF0xC6PcRZ7epwnsK8neQrTODDP8CwO
dY7ncKTzPI9jXUpFbKCqN3kLt7rODdzpF37FGx7M3V0RPXjSgzyEll7jlGPX
+cb+Tt3gv2QfX+NXX3ENP7rKl7jAt/mcz/ClT/kEn7qS3IsPvWr/Cp71Ahfx
qDM8jHvdz33oRdPccvs7arqZvBEVvc1l7OiR9P8ftwGByjxn
       "]], Line3DBox[{1115, 256, 1750, 260, 2056, 1162, 257, 1115}]}, {
      Line3DBox[{1165, 1181, 2057, 2059, 1183, 2074, 2075, 1201, 1203, 1775, 
       2109, 2111, 1222, 2142, 2143, 1788, 2134, 1239, 1800, 2179, 2181, 1256,
        1810, 2211, 2213, 1276, 2237, 1821, 2245, 1296}], 
      Line3DBox[{1167, 2063, 1752, 2062, 1186, 1758, 2081, 2083, 1205, 2107, 
       1766, 2119, 1224, 2139, 1777, 2150, 2152, 1241, 2190, 1790, 2178, 1258,
        2222, 2223, 1259, 1278, 2242, 1812, 2251, 1298}], 
      Line3DBox[{1170, 1168, 2065, 2067, 1188, 2091, 1761, 2089, 1208, 2117, 
       1769, 2124, 1226, 2148, 1780, 2157, 2159, 1243, 1793, 2197, 2198, 1262,
        2219, 1804, 2228, 1282, 2257, 2258, 1286, 1300}], 
      Line3DBox[{1173, 2078, 2079, 1755, 1192, 1198, 2103, 2105, 1211, 1218, 
       2135, 2137, 1229, 1234, 2170, 2172, 2175, 1246, 1252, 2207, 2209, 1265,
        1272, 2238, 2240, 1285, 1291, 2266, 2268, 1303}], 
      Line3DBox[{1176, 1184, 2085, 2087, 1195, 2114, 2115, 1768, 1215, 350, 
       2146, 1231, 2183, 1791, 2185, 2187, 1249, 1260, 2215, 2217, 1269, 1280,
        2247, 2249, 1288, 2270, 1822, 2272, 1305}], 
      Line3DBox[{1178, 1189, 2093, 2095, 1197, 2123, 1770, 2122, 1217, 2154, 
       1782, 2156, 1233, 2192, 1794, 2194, 2196, 1251, 1267, 2225, 2227, 1271,
        2253, 1815, 2255, 1290, 2275, 2276, 1825, 1307}], 
      Line3DBox[{1180, 301, 2068, 1200, 2126, 1773, 2098, 1220, 2128, 1786, 
       2162, 1237, 2200, 1798, 2163, 2165, 1254, 2230, 1808, 2202, 1274, 2232,
        1819, 2261, 1294, 2278, 1826, 2262, 1309}], 
      Line3DBox[{1295, 2244, 1820, 2236, 1275, 2212, 1811, 2206, 1255, 2180, 
       1801, 2169, 1238, 2133, 2132, 1787, 2141, 1221, 2110, 1776, 2102, 1202,
        2076, 1765, 2073, 1182, 2058, 1756, 2072, 1164}], 
      Line3DBox[{1297, 1279, 2243, 2241, 1277, 2210, 1802, 2221, 1257, 2177, 
       2176, 1789, 1240, 2151, 1778, 2140, 2138, 1223, 1206, 2108, 2106, 1204,
        2082, 1759, 2084, 1185, 2061, 2060, 1163, 1166}], 
      Line3DBox[{1299, 2250, 1814, 2256, 1281, 1266, 2220, 2218, 1261, 1247, 
       2189, 2188, 1242, 2158, 1781, 2149, 2147, 1225, 1212, 2118, 2116, 1207,
        1193, 2092, 2090, 1187, 2066, 1753, 2064, 1169}], 
      Line3DBox[{1301, 1818, 2265, 2263, 1283, 1807, 2235, 2233, 1263, 1797, 
       2205, 2203, 1244, 2173, 1785, 2168, 2166, 1227, 1772, 2131, 2129, 1209,
        1764, 2101, 2099, 1190, 2070, 2069, 1174, 1171}], 
      Line3DBox[{1304, 1823, 2271, 2269, 1287, 2248, 1813, 2246, 1268, 2216, 
       1803, 2214, 1248, 2186, 1792, 2184, 2182, 1230, 2145, 1779, 2144, 1214,
        2112, 1767, 2113, 1194, 2086, 1757, 2080, 1175}], 
      Line3DBox[{1306, 2273, 1824, 2274, 1289, 1816, 2254, 2252, 1270, 2226, 
       1805, 2224, 1250, 2195, 1795, 2193, 2191, 1232, 1783, 2155, 2153, 1216,
        2121, 2120, 1213, 1196, 2094, 1760, 2088, 1177}], 
      Line3DBox[{1308, 1827, 2279, 2277, 1293, 2260, 2259, 1292, 1273, 1809, 
       2231, 2229, 1253, 2164, 1799, 2201, 2199, 1236, 2161, 2160, 1235, 1219,
        1774, 2127, 2125, 1199, 1762, 2097, 2096, 1179}], 
      Line3DBox[{1312, 1328, 2280, 2282, 1330, 2297, 2298, 1348, 1350, 1851, 
       2332, 2334, 1369, 2365, 2366, 1864, 2357, 1386, 1876, 2402, 2404, 1403,
        1886, 2434, 2436, 1423, 2460, 1897, 2468, 1443}], 
      Line3DBox[{1314, 2286, 1828, 2285, 1333, 1834, 2304, 2306, 1352, 2330, 
       1842, 2342, 1371, 2362, 1853, 2373, 2375, 1388, 2413, 1866, 2401, 1405,
        2445, 2446, 1406, 1425, 2465, 1888, 2474, 1445}], 
      Line3DBox[{1317, 1315, 2288, 2290, 1335, 2314, 1837, 2312, 1355, 2340, 
       1845, 2347, 1373, 2371, 1856, 2380, 2382, 1390, 1869, 2420, 2421, 1409,
        2442, 1880, 2451, 1429, 2480, 2481, 1433, 1447}], 
      Line3DBox[{1320, 2301, 2302, 1831, 1339, 1345, 2326, 2328, 1358, 1365, 
       2358, 2360, 1376, 1381, 2393, 2395, 2398, 1393, 1399, 2430, 2432, 1412,
        1419, 2461, 2463, 1432, 1438, 2489, 2491, 1450}], 
      Line3DBox[{1323, 1331, 2308, 2310, 1342, 2337, 2338, 1844, 1362, 575, 
       2369, 1378, 2406, 1867, 2408, 2410, 1396, 1407, 2438, 2440, 1416, 1427,
        2470, 2472, 1435, 2493, 1898, 2495, 1452}], 
      Line3DBox[{1325, 1336, 2316, 2318, 1344, 2346, 1846, 2345, 1364, 2377, 
       1858, 2379, 1380, 2415, 1870, 2417, 2419, 1398, 1414, 2448, 2450, 1418,
        2476, 1891, 2478, 1437, 2498, 2499, 1901, 1454}], 
      Line3DBox[{1327, 526, 2291, 1347, 2349, 1849, 2321, 1367, 2351, 1862, 
       2385, 1384, 2423, 1874, 2386, 2388, 1401, 2453, 1884, 2425, 1421, 2455,
        1895, 2484, 1441, 2501, 1902, 2485, 1456}], 
      Line3DBox[{1442, 2467, 1896, 2459, 1422, 2435, 1887, 2429, 1402, 2403, 
       1877, 2392, 1385, 2356, 2355, 1863, 2364, 1368, 2333, 1852, 2325, 1349,
        2299, 1841, 2296, 1329, 2281, 1832, 2295, 1311}], 
      Line3DBox[{1444, 1426, 2466, 2464, 1424, 2433, 1878, 2444, 1404, 2400, 
       2399, 1865, 1387, 2374, 1854, 2363, 2361, 1370, 1353, 2331, 2329, 1351,
        2305, 1835, 2307, 1332, 2284, 2283, 1310, 1313}], 
      Line3DBox[{1446, 2473, 1890, 2479, 1428, 1413, 2443, 2441, 1408, 1394, 
       2412, 2411, 1389, 2381, 1857, 2372, 2370, 1372, 1359, 2341, 2339, 1354,
        1340, 2315, 2313, 1334, 2289, 1829, 2287, 1316}], 
      Line3DBox[{1448, 1894, 2488, 2486, 1430, 1883, 2458, 2456, 1410, 1873, 
       2428, 2426, 1391, 2396, 1861, 2391, 2389, 1374, 1848, 2354, 2352, 1356,
        1840, 2324, 2322, 1337, 2293, 2292, 1321, 1318}], 
      Line3DBox[{1451, 1899, 2494, 2492, 1434, 2471, 1889, 2469, 1415, 2439, 
       1879, 2437, 1395, 2409, 1868, 2407, 2405, 1377, 2368, 1855, 2367, 1361,
        2335, 1843, 2336, 1341, 2309, 1833, 2303, 1322}], 
      Line3DBox[{1453, 2496, 1900, 2497, 1436, 1892, 2477, 2475, 1417, 2449, 
       1881, 2447, 1397, 2418, 1871, 2416, 2414, 1379, 1859, 2378, 2376, 1363,
        2344, 2343, 1360, 1343, 2317, 1836, 2311, 1324}], 
      Line3DBox[{1455, 1903, 2502, 2500, 1440, 2483, 2482, 1439, 1420, 1885, 
       2454, 2452, 1400, 2387, 1875, 2424, 2422, 1383, 2384, 2383, 1382, 1366,
        1850, 2350, 2348, 1346, 1838, 2320, 2319, 1326}], 
      Line3DBox[{1459, 1475, 2503, 2505, 1477, 2520, 2521, 1495, 1497, 1927, 
       2555, 2557, 1516, 2588, 2589, 1940, 2580, 1533, 1952, 2625, 2627, 1550,
        1962, 2657, 2659, 1570, 2683, 1973, 2691, 1590}], 
      Line3DBox[{1461, 2509, 1904, 2508, 1480, 1910, 2527, 2529, 1499, 2553, 
       1918, 2565, 1518, 2585, 1929, 2596, 2598, 1535, 2636, 1942, 2624, 1552,
        2668, 2669, 1553, 1572, 2688, 1964, 2697, 1592}], 
      Line3DBox[{1464, 1462, 2511, 2513, 1482, 2537, 1913, 2535, 1502, 2563, 
       1921, 2570, 1520, 2594, 1932, 2603, 2605, 1537, 1945, 2643, 2644, 1556,
        2665, 1956, 2674, 1576, 2703, 2704, 1580, 1594}], 
      Line3DBox[{1467, 2524, 2525, 1907, 1486, 1492, 2549, 2551, 1505, 1512, 
       2581, 2583, 1523, 1528, 2616, 2618, 2621, 1540, 1546, 2653, 2655, 1559,
        1566, 2684, 2686, 1579, 1585, 2712, 2714, 1597}], 
      Line3DBox[{1470, 1478, 2531, 2533, 1489, 2560, 2561, 1920, 1509, 800, 
       2592, 1525, 2629, 1943, 2631, 2633, 1543, 1554, 2661, 2663, 1563, 1574,
        2693, 2695, 1582, 2716, 1974, 2718, 1599}], 
      Line3DBox[{1472, 1483, 2539, 2541, 1491, 2569, 1922, 2568, 1511, 2600, 
       1934, 2602, 1527, 2638, 1946, 2640, 2642, 1545, 1561, 2671, 2673, 1565,
        2699, 1967, 2701, 1584, 2721, 2722, 1977, 1601}], 
      Line3DBox[{1474, 751, 2514, 1494, 2572, 1925, 2544, 1514, 2574, 1938, 
       2608, 1531, 2646, 1950, 2609, 2611, 1548, 2676, 1960, 2648, 1568, 2678,
        1971, 2707, 1588, 2724, 1978, 2708, 1603}], 
      Line3DBox[{1589, 2690, 1972, 2682, 1569, 2658, 1963, 2652, 1549, 2626, 
       1953, 2615, 1532, 2579, 2578, 1939, 2587, 1515, 2556, 1928, 2548, 1496,
        2522, 1917, 2519, 1476, 2504, 1908, 2518, 1458}], 
      Line3DBox[{1591, 1573, 2689, 2687, 1571, 2656, 1954, 2667, 1551, 2623, 
       2622, 1941, 1534, 2597, 1930, 2586, 2584, 1517, 1500, 2554, 2552, 1498,
        2528, 1911, 2530, 1479, 2507, 2506, 1457, 1460}], 
      Line3DBox[{1593, 2696, 1966, 2702, 1575, 1560, 2666, 2664, 1555, 1541, 
       2635, 2634, 1536, 2604, 1933, 2595, 2593, 1519, 1506, 2564, 2562, 1501,
        1487, 2538, 2536, 1481, 2512, 1905, 2510, 1463}], 
      Line3DBox[{1595, 1970, 2711, 2709, 1577, 1959, 2681, 2679, 1557, 1949, 
       2651, 2649, 1538, 2619, 1937, 2614, 2612, 1521, 1924, 2577, 2575, 1503,
        1916, 2547, 2545, 1484, 2516, 2515, 1468, 1465}], 
      Line3DBox[{1598, 1975, 2717, 2715, 1581, 2694, 1965, 2692, 1562, 2662, 
       1955, 2660, 1542, 2632, 1944, 2630, 2628, 1524, 2591, 1931, 2590, 1508,
        2558, 1919, 2559, 1488, 2532, 1909, 2526, 1469}], 
      Line3DBox[{1600, 2719, 1976, 2720, 1583, 1968, 2700, 2698, 1564, 2672, 
       1957, 2670, 1544, 2641, 1947, 2639, 2637, 1526, 1935, 2601, 2599, 1510,
        2567, 2566, 1507, 1490, 2540, 1912, 2534, 1471}], 
      Line3DBox[{1602, 1979, 2725, 2723, 1587, 2706, 2705, 1586, 1567, 1961, 
       2677, 2675, 1547, 2610, 1951, 2647, 2645, 1530, 2607, 2606, 1529, 1513,
        1926, 2573, 2571, 1493, 1914, 2543, 2542, 1473}], 
      Line3DBox[{1606, 1622, 2726, 2728, 1624, 2743, 2744, 1642, 1644, 2003, 
       2778, 2780, 1663, 2811, 2812, 2016, 2803, 1680, 2028, 2848, 2850, 1697,
        2038, 2880, 2882, 1717, 2906, 2049, 2914, 1737}], 
      Line3DBox[{1608, 2732, 1980, 2731, 1627, 1986, 2750, 2752, 1646, 2776, 
       1994, 2788, 1665, 2808, 2005, 2819, 2821, 1682, 2859, 2018, 2847, 1699,
        2891, 2892, 1700, 1719, 2911, 2040, 2920, 1739}], 
      Line3DBox[{1611, 1609, 2734, 2736, 1629, 2760, 1989, 2758, 1649, 2786, 
       1997, 2793, 1667, 2817, 2008, 2826, 2828, 1684, 2021, 2866, 2867, 1703,
        2888, 2032, 2897, 1723, 2926, 2927, 1727, 1741}], 
      Line3DBox[{1614, 2747, 2748, 1983, 1633, 1639, 2772, 2774, 1652, 1659, 
       2804, 2806, 1670, 1675, 2839, 2841, 2844, 1687, 1693, 2876, 2878, 1706,
        1713, 2907, 2909, 1726, 1732, 2935, 2937, 1744}], 
      Line3DBox[{1617, 1625, 2754, 2756, 1636, 2783, 2784, 1996, 1656, 1025, 
       2815, 1672, 2852, 2019, 2854, 2856, 1690, 1701, 2884, 2886, 1710, 1721,
        2916, 2918, 1729, 2939, 2050, 2941, 1746}], 
      Line3DBox[{1619, 1630, 2762, 2764, 1638, 2792, 1998, 2791, 1658, 2823, 
       2010, 2825, 1674, 2861, 2022, 2863, 2865, 1692, 1708, 2894, 2896, 1712,
        2922, 2043, 2924, 1731, 2944, 2945, 2053, 1748}], 
      Line3DBox[{1621, 976, 2737, 1641, 2795, 2001, 2767, 1661, 2797, 2014, 
       2831, 1678, 2869, 2026, 2832, 2834, 1695, 2899, 2036, 2871, 1715, 2901,
        2047, 2930, 1735, 2947, 2054, 2931, 1751}], 
      Line3DBox[{1736, 2913, 2048, 2905, 1716, 2881, 2039, 2875, 1696, 2849, 
       2029, 2838, 1679, 2802, 2801, 2015, 2810, 1662, 2779, 2004, 2771, 1643,
        2745, 1993, 2742, 1623, 2727, 1984, 2741, 1605}], 
      Line3DBox[{1738, 1720, 2912, 2910, 1718, 2879, 2030, 2890, 1698, 2846, 
       2845, 2017, 1681, 2820, 2006, 2809, 2807, 1664, 1647, 2777, 2775, 1645,
        2751, 1987, 2753, 1626, 2730, 2729, 1604, 1607}], 
      Line3DBox[{1740, 2919, 2042, 2925, 1722, 1707, 2889, 2887, 1702, 1688, 
       2858, 2857, 1683, 2827, 2009, 2818, 2816, 1666, 1653, 2787, 2785, 1648,
        1634, 2761, 2759, 1628, 2735, 1981, 2733, 1610}], 
      Line3DBox[{1742, 2046, 2934, 2932, 1724, 2035, 2904, 2902, 1704, 2025, 
       2874, 2872, 1685, 2842, 2013, 2837, 2835, 1668, 2000, 2800, 2798, 1650,
        1992, 2770, 2768, 1631, 2739, 2738, 1615, 1612}], 
      Line3DBox[{1745, 2051, 2940, 2938, 1728, 2917, 2041, 2915, 1709, 2885, 
       2031, 2883, 1689, 2855, 2020, 2853, 2851, 1671, 2814, 2007, 2813, 1655,
        2781, 1995, 2782, 1635, 2755, 1985, 2749, 1616}], 
      Line3DBox[{1747, 2942, 2052, 2943, 1730, 2044, 2923, 2921, 1711, 2895, 
       2033, 2893, 1691, 2864, 2023, 2862, 2860, 1673, 2011, 2824, 2822, 1657,
        2790, 2789, 1654, 1637, 2763, 1988, 2757, 1618}], 
      Line3DBox[{1749, 2055, 2948, 2946, 1734, 2929, 2928, 1733, 1714, 2037, 
       2900, 2898, 1694, 2833, 2027, 2870, 2868, 1677, 2830, 2829, 1676, 1660,
        2002, 2796, 2794, 1640, 1990, 2766, 2765, 1620}], 
      Line3DBox[{1172, 2077, 1754, 2071, 1191, 2100, 1763, 2104, 1210, 2130, 
       1771, 2136, 1228, 2167, 1784, 2171, 2174, 1245, 2204, 1796, 2208, 1264,
        2234, 1806, 2239, 1284, 2264, 1817, 2267, 1302}], 
      Line3DBox[{1319, 2300, 1830, 2294, 1338, 2323, 1839, 2327, 1357, 2353, 
       1847, 2359, 1375, 2390, 1860, 2394, 2397, 1392, 2427, 1872, 2431, 1411,
        2457, 1882, 2462, 1431, 2487, 1893, 2490, 1449}], 
      Line3DBox[{1466, 2523, 1906, 2517, 1485, 2546, 1915, 2550, 1504, 2576, 
       1923, 2582, 1522, 2613, 1936, 2617, 2620, 1539, 2650, 1948, 2654, 1558,
        2680, 1958, 2685, 1578, 2710, 1969, 2713, 1596}], 
      Line3DBox[{1613, 2746, 1982, 2740, 1632, 2769, 1991, 2773, 1651, 2799, 
       1999, 2805, 1669, 2836, 2012, 2840, 2843, 1686, 2873, 2024, 2877, 1705,
        2903, 2034, 2908, 1725, 2933, 2045, 2936, 1743}]}, {
      Line3DBox[{274, 2068, 302, 2097, 300, 2095, 2094, 294, 292, 2087, 2086, 
       286, 284, 2079, 272, 2071, 2070, 270, 2067, 2066, 268, 266, 264, 2062, 
       2061, 262, 2059, 2058, 278, 280}], 
      Line3DBox[{276, 2098, 334, 2127, 328, 326, 2122, 2121, 320, 2115, 318, 
       2112, 312, 2105, 2104, 304, 2101, 298, 2089, 296, 2092, 290, 2083, 
       2082, 288, 282, 2075, 308, 2076, 310}], 
      Line3DBox[{279, 2072, 277, 2057, 261, 2060, 263, 2063, 265, 2064, 267, 
       2065, 269, 2069, 271, 2077, 2078, 283, 2080, 285, 2085, 291, 2088, 293,
        2093, 299, 2096, 301, 273}], 
      Line3DBox[{306, 371, 2162, 2161, 363, 2156, 361, 2155, 353, 2146, 2145, 
       351, 343, 2137, 2136, 332, 2131, 330, 2124, 324, 2118, 322, 2119, 316, 
       2108, 314, 2111, 2110, 339, 341}], 
      Line3DBox[{309, 307, 2073, 2074, 281, 2084, 287, 2081, 289, 2090, 2091, 
       295, 297, 2099, 2100, 303, 2103, 311, 317, 2113, 2114, 319, 2120, 325, 
       2123, 327, 2125, 2126, 333, 275}], 
      Line3DBox[{337, 2165, 2164, 409, 402, 2196, 2195, 399, 392, 2187, 2186, 
       389, 382, 2175, 2174, 2173, 369, 366, 2159, 2158, 359, 356, 2152, 2151,
        349, 346, 376, 2134, 2133, 379}], 
      Line3DBox[{340, 2102, 338, 2109, 313, 2106, 2107, 315, 321, 2116, 2117, 
       323, 329, 2129, 2130, 331, 2135, 342, 2144, 350, 352, 2153, 2154, 360, 
       362, 2160, 370, 2128, 305}], 
      Line3DBox[{373, 2202, 439, 2231, 433, 2227, 2226, 431, 425, 2217, 2216, 
       423, 417, 2209, 2208, 406, 2205, 404, 2198, 396, 2189, 394, 386, 2178, 
       2177, 384, 2181, 2180, 413, 415}], 
      Line3DBox[{377, 374, 2141, 2142, 344, 2138, 2139, 347, 354, 2147, 2148, 
       357, 364, 2166, 2167, 367, 2170, 380, 2182, 2183, 387, 390, 2191, 2192,
        397, 400, 2199, 2200, 407, 335}], 
      Line3DBox[{411, 469, 2261, 2260, 463, 2255, 461, 2254, 455, 2249, 2248, 
       453, 447, 2240, 2239, 437, 2235, 435, 2228, 429, 2220, 427, 2223, 421, 
       2210, 419, 2213, 2212, 443, 445}], 
      Line3DBox[{414, 2169, 412, 2179, 383, 2176, 385, 2190, 393, 2188, 395, 
       2197, 403, 2203, 2204, 405, 2207, 416, 2214, 422, 2215, 424, 2224, 430,
        2225, 432, 2229, 2230, 438, 372}], 
      Line3DBox[{441, 2262, 485, 2279, 483, 2276, 481, 2273, 479, 2272, 477, 
       2271, 475, 2268, 2267, 467, 2265, 465, 2258, 459, 2250, 457, 2251, 451,
        2243, 449, 2245, 2244, 471, 473}], 
      Line3DBox[{444, 2206, 442, 2211, 418, 420, 2221, 2222, 426, 2218, 2219, 
       428, 434, 2233, 2234, 436, 2238, 446, 2246, 452, 2247, 454, 2252, 2253,
        460, 462, 2259, 468, 2232, 410}], 
      Line3DBox[{472, 2236, 2237, 470, 448, 2241, 2242, 450, 456, 458, 2256, 
       2257, 464, 2263, 2264, 466, 2266, 474, 2269, 2270, 476, 478, 480, 2274,
        2275, 482, 2277, 2278, 484, 440}], 
      Line3DBox[{499, 2291, 527, 2320, 525, 2318, 2317, 519, 517, 2310, 2309, 
       511, 509, 2302, 497, 2294, 2293, 495, 2290, 2289, 493, 491, 489, 2285, 
       2284, 487, 2282, 2281, 503, 505}], 
      Line3DBox[{501, 2321, 559, 2350, 553, 551, 2345, 2344, 545, 2338, 543, 
       2335, 537, 2328, 2327, 529, 2324, 523, 2312, 521, 2315, 515, 2306, 
       2305, 513, 507, 2298, 533, 2299, 535}], 
      Line3DBox[{504, 2295, 502, 2280, 486, 2283, 488, 2286, 490, 2287, 492, 
       2288, 494, 2292, 496, 2300, 2301, 508, 2303, 510, 2308, 516, 2311, 518,
        2316, 524, 2319, 526, 498}], 
      Line3DBox[{531, 596, 2385, 2384, 588, 2379, 586, 2378, 578, 2369, 2368, 
       576, 568, 2360, 2359, 557, 2354, 555, 2347, 549, 2341, 547, 2342, 541, 
       2331, 539, 2334, 2333, 564, 566}], 
      Line3DBox[{534, 532, 2296, 2297, 506, 2307, 512, 2304, 514, 2313, 2314, 
       520, 522, 2322, 2323, 528, 2326, 536, 542, 2336, 2337, 544, 2343, 550, 
       2346, 552, 2348, 2349, 558, 500}], 
      Line3DBox[{562, 2388, 2387, 634, 627, 2419, 2418, 624, 617, 2410, 2409, 
       614, 607, 2398, 2397, 2396, 594, 591, 2382, 2381, 584, 581, 2375, 2374,
        574, 571, 601, 2357, 2356, 604}], 
      Line3DBox[{565, 2325, 563, 2332, 538, 2329, 2330, 540, 546, 2339, 2340, 
       548, 554, 2352, 2353, 556, 2358, 567, 2367, 575, 577, 2376, 2377, 585, 
       587, 2383, 595, 2351, 530}], 
      Line3DBox[{598, 2425, 664, 2454, 658, 2450, 2449, 656, 650, 2440, 2439, 
       648, 642, 2432, 2431, 631, 2428, 629, 2421, 621, 2412, 619, 611, 2401, 
       2400, 609, 2404, 2403, 638, 640}], 
      Line3DBox[{602, 599, 2364, 2365, 569, 2361, 2362, 572, 579, 2370, 2371, 
       582, 589, 2389, 2390, 592, 2393, 605, 2405, 2406, 612, 615, 2414, 2415,
        622, 625, 2422, 2423, 632, 560}], 
      Line3DBox[{636, 694, 2484, 2483, 688, 2478, 686, 2477, 680, 2472, 2471, 
       678, 672, 2463, 2462, 662, 2458, 660, 2451, 654, 2443, 652, 2446, 646, 
       2433, 644, 2436, 2435, 668, 670}], 
      Line3DBox[{639, 2392, 637, 2402, 608, 2399, 610, 2413, 618, 2411, 620, 
       2420, 628, 2426, 2427, 630, 2430, 641, 2437, 647, 2438, 649, 2447, 655,
        2448, 657, 2452, 2453, 663, 597}], 
      Line3DBox[{666, 2485, 710, 2502, 708, 2499, 706, 2496, 704, 2495, 702, 
       2494, 700, 2491, 2490, 692, 2488, 690, 2481, 684, 2473, 682, 2474, 676,
        2466, 674, 2468, 2467, 696, 698}], 
      Line3DBox[{669, 2429, 667, 2434, 643, 645, 2444, 2445, 651, 2441, 2442, 
       653, 659, 2456, 2457, 661, 2461, 671, 2469, 677, 2470, 679, 2475, 2476,
        685, 687, 2482, 693, 2455, 635}], 
      Line3DBox[{697, 2459, 2460, 695, 673, 2464, 2465, 675, 681, 683, 2479, 
       2480, 689, 2486, 2487, 691, 2489, 699, 2492, 2493, 701, 703, 705, 2497,
        2498, 707, 2500, 2501, 709, 665}], 
      Line3DBox[{724, 2514, 752, 2543, 750, 2541, 2540, 744, 742, 2533, 2532, 
       736, 734, 2525, 722, 2517, 2516, 720, 2513, 2512, 718, 716, 714, 2508, 
       2507, 712, 2505, 2504, 728, 730}], 
      Line3DBox[{726, 2544, 784, 2573, 778, 776, 2568, 2567, 770, 2561, 768, 
       2558, 762, 2551, 2550, 754, 2547, 748, 2535, 746, 2538, 740, 2529, 
       2528, 738, 732, 2521, 758, 2522, 760}], 
      Line3DBox[{729, 2518, 727, 2503, 711, 2506, 713, 2509, 715, 2510, 717, 
       2511, 719, 2515, 721, 2523, 2524, 733, 2526, 735, 2531, 741, 2534, 743,
        2539, 749, 2542, 751, 723}], 
      Line3DBox[{756, 821, 2608, 2607, 813, 2602, 811, 2601, 803, 2592, 2591, 
       801, 793, 2583, 2582, 782, 2577, 780, 2570, 774, 2564, 772, 2565, 766, 
       2554, 764, 2557, 2556, 789, 791}], 
      Line3DBox[{759, 757, 2519, 2520, 731, 2530, 737, 2527, 739, 2536, 2537, 
       745, 747, 2545, 2546, 753, 2549, 761, 767, 2559, 2560, 769, 2566, 775, 
       2569, 777, 2571, 2572, 783, 725}], 
      Line3DBox[{787, 2611, 2610, 859, 852, 2642, 2641, 849, 842, 2633, 2632, 
       839, 832, 2621, 2620, 2619, 819, 816, 2605, 2604, 809, 806, 2598, 2597,
        799, 796, 826, 2580, 2579, 829}], 
      Line3DBox[{790, 2548, 788, 2555, 763, 2552, 2553, 765, 771, 2562, 2563, 
       773, 779, 2575, 2576, 781, 2581, 792, 2590, 800, 802, 2599, 2600, 810, 
       812, 2606, 820, 2574, 755}], 
      Line3DBox[{823, 2648, 889, 2677, 883, 2673, 2672, 881, 875, 2663, 2662, 
       873, 867, 2655, 2654, 856, 2651, 854, 2644, 846, 2635, 844, 836, 2624, 
       2623, 834, 2627, 2626, 863, 865}], 
      Line3DBox[{827, 824, 2587, 2588, 794, 2584, 2585, 797, 804, 2593, 2594, 
       807, 814, 2612, 2613, 817, 2616, 830, 2628, 2629, 837, 840, 2637, 2638,
        847, 850, 2645, 2646, 857, 785}], 
      Line3DBox[{861, 919, 2707, 2706, 913, 2701, 911, 2700, 905, 2695, 2694, 
       903, 897, 2686, 2685, 887, 2681, 885, 2674, 879, 2666, 877, 2669, 871, 
       2656, 869, 2659, 2658, 893, 895}], 
      Line3DBox[{864, 2615, 862, 2625, 833, 2622, 835, 2636, 843, 2634, 845, 
       2643, 853, 2649, 2650, 855, 2653, 866, 2660, 872, 2661, 874, 2670, 880,
        2671, 882, 2675, 2676, 888, 822}], 
      Line3DBox[{891, 2708, 935, 2725, 933, 2722, 931, 2719, 929, 2718, 927, 
       2717, 925, 2714, 2713, 917, 2711, 915, 2704, 909, 2696, 907, 2697, 901,
        2689, 899, 2691, 2690, 921, 923}], 
      Line3DBox[{894, 2652, 892, 2657, 868, 870, 2667, 2668, 876, 2664, 2665, 
       878, 884, 2679, 2680, 886, 2684, 896, 2692, 902, 2693, 904, 2698, 2699,
        910, 912, 2705, 918, 2678, 860}], 
      Line3DBox[{922, 2682, 2683, 920, 898, 2687, 2688, 900, 906, 908, 2702, 
       2703, 914, 2709, 2710, 916, 2712, 924, 2715, 2716, 926, 928, 930, 2720,
        2721, 932, 2723, 2724, 934, 890}], 
      Line3DBox[{949, 2737, 977, 2766, 975, 2764, 2763, 969, 967, 2756, 2755, 
       961, 959, 2748, 947, 2740, 2739, 945, 2736, 2735, 943, 941, 939, 2731, 
       2730, 937, 2728, 2727, 953, 955}], 
      Line3DBox[{951, 2767, 1009, 2796, 1003, 1001, 2791, 2790, 995, 2784, 
       993, 2781, 987, 2774, 2773, 979, 2770, 973, 2758, 971, 2761, 965, 2752,
        2751, 963, 957, 2744, 983, 2745, 985}], 
      Line3DBox[{954, 2741, 952, 2726, 936, 2729, 938, 2732, 940, 2733, 942, 
       2734, 944, 2738, 946, 2746, 2747, 958, 2749, 960, 2754, 966, 2757, 968,
        2762, 974, 2765, 976, 948}], 
      Line3DBox[{981, 1046, 2831, 2830, 1038, 2825, 1036, 2824, 1028, 2815, 
       2814, 1026, 1018, 2806, 2805, 1007, 2800, 1005, 2793, 999, 2787, 997, 
       2788, 991, 2777, 989, 2780, 2779, 1014, 1016}], 
      Line3DBox[{984, 982, 2742, 2743, 956, 2753, 962, 2750, 964, 2759, 2760, 
       970, 972, 2768, 2769, 978, 2772, 986, 992, 2782, 2783, 994, 2789, 1000,
        2792, 1002, 2794, 2795, 1008, 950}], 
      Line3DBox[{1012, 2834, 2833, 1084, 1077, 2865, 2864, 1074, 1067, 2856, 
       2855, 1064, 1057, 2844, 2843, 2842, 1044, 1041, 2828, 2827, 1034, 1031,
        2821, 2820, 1024, 1021, 1051, 2803, 2802, 1054}], 
      Line3DBox[{1015, 2771, 1013, 2778, 988, 2775, 2776, 990, 996, 2785, 
       2786, 998, 1004, 2798, 2799, 1006, 2804, 1017, 2813, 1025, 1027, 2822, 
       2823, 1035, 1037, 2829, 1045, 2797, 980}], 
      Line3DBox[{1048, 2871, 1114, 2900, 1108, 2896, 2895, 1106, 1100, 2886, 
       2885, 1098, 1092, 2878, 2877, 1081, 2874, 1079, 2867, 1071, 2858, 1069,
        1061, 2847, 2846, 1059, 2850, 2849, 1088, 1090}], 
      Line3DBox[{1052, 1049, 2810, 2811, 1019, 2807, 2808, 1022, 1029, 2816, 
       2817, 1032, 1039, 2835, 2836, 1042, 2839, 1055, 2851, 2852, 1062, 1065,
        2860, 2861, 1072, 1075, 2868, 2869, 1082, 1010}], 
      Line3DBox[{1086, 1143, 2930, 2929, 1137, 2924, 1135, 2923, 1129, 2918, 
       2917, 1127, 1121, 2909, 2908, 1112, 2904, 1110, 2897, 1104, 2889, 1102,
        2892, 1096, 2879, 1094, 2882, 2881, 1117, 1119}], 
      Line3DBox[{1089, 2838, 1087, 2848, 1058, 2845, 1060, 2859, 1068, 2857, 
       1070, 2866, 1078, 2872, 2873, 1080, 2876, 1091, 2883, 1097, 2884, 1099,
        2893, 1105, 2894, 1107, 2898, 2899, 1113, 1047}], 
      Line3DBox[{1118, 2875, 1116, 2880, 1093, 1095, 2890, 2891, 1101, 2887, 
       2888, 1103, 1109, 2902, 2903, 1111, 2907, 1120, 2915, 1126, 2916, 1128,
        2921, 2922, 1134, 1136, 2928, 1142, 2901, 1085}], 
      Line3DBox[{1146, 2905, 2906, 1144, 1122, 2910, 2911, 1124, 1130, 1132, 
       2925, 2926, 1138, 2932, 2933, 1140, 2935, 1148, 2938, 2939, 1150, 1152,
        1154, 2943, 2944, 1156, 2946, 2947, 1158, 1160}], 
      Line3DBox[{336, 2163, 408, 2201, 401, 2194, 398, 2193, 391, 2185, 388, 
       2184, 381, 2172, 2171, 368, 2168, 365, 2157, 358, 2149, 355, 2150, 348,
        2140, 345, 2143, 375, 2132, 378}], 
      Line3DBox[{561, 2386, 633, 2424, 626, 2417, 623, 2416, 616, 2408, 613, 
       2407, 606, 2395, 2394, 593, 2391, 590, 2380, 583, 2372, 580, 2373, 573,
        2363, 570, 2366, 600, 2355, 603}], 
      Line3DBox[{786, 2609, 858, 2647, 851, 2640, 848, 2639, 841, 2631, 838, 
       2630, 831, 2618, 2617, 818, 2614, 815, 2603, 808, 2595, 805, 2596, 798,
        2586, 795, 2589, 825, 2578, 828}], 
      Line3DBox[{1011, 2832, 1083, 2870, 1076, 2863, 1073, 2862, 1066, 2854, 
       1063, 2853, 1056, 2841, 2840, 1043, 2837, 1040, 2826, 1033, 2818, 1030,
        2819, 1023, 2809, 1020, 2812, 1050, 2801, 1053}], 
      Line3DBox[{1147, 1145, 2913, 2914, 1123, 2912, 1125, 2920, 1131, 2919, 
       1133, 2927, 1139, 2934, 1141, 2936, 2937, 1149, 2940, 1151, 2941, 1153,
        2942, 1155, 2945, 1157, 2948, 1159, 2931, 
       1161}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm], 
    FormBox["\"u\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  ImageSize->{632.5843721552192, 460.},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0.1, 0.8}, {0.1, 0.8}, {2.0239665298905654`, 
   5.430537508743574}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-0.4864780092715093, 3.2165882219259556`, 0.9310743026539404},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.49823492575*^9, 3.49825018884375*^9, 
  3.498250242890625*^9, 3.498254824125*^9, 3.4982549704375*^9, 
  3.498261871984375*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvXm8ZddV37k50z13vu++uV5VaShbHrEZnQ8QMnUnhG4cwhjCaAcQnsAG
T7IlS7JklVRVmkxnIGmakAaSEAIh3RASIGG0LVklVcmSLE+AY0P+6E5/Oun+
kNhSqarvWnvv39p7n7Xvu++9EvmjuZ86p847595zz9nru9e01z731a992+u+
/wdf+7bXf+9rr/2aH3ntW173+u9967V/5c0/sthVfoExxbuM+YLz1xravmKM
X11Z/LOrm2lFu/90x//Pd1xPq8Iystj6G8GhF/B2aSw7V+xC628+1JvkS75l
tUOneLuKTu3f983qLRTxyb7pv33z/sns+CPcd5mIw+5bvM4Gb/9DvWFr5bMr
fKxRCDiz/8d6ysfued4+Vum7w9uTRmywde5AYviaRAx13Ctck/LWS4OP/ZXV
2/U5WvM7b9j/BBXefEWR7KonSD72n2mrR1t95fpeuP9JazTSp2lrLXerrbLv
BQc5/QWcfqicSrv6/b5S5KtR+Ov4vuPKUVZNrXy2c+GhPFjMc9yO2sj7345g
/KLg3P8Rl7mtfOaGFZvllfaMP5cQn96zZ+8GfOmLlfd9sdt34403Yr/7gn+2
jEzdNKyj8WYr3uDV/f4C93q98l3foex7xWG+6z8txVtj5JBfzR+QvqrBrX3b
19G6yl3f8u/VqH/0wH1C28dao7HAnjZmhV70ipT0Hrakx2td6dXKvr+Ar+8f
7Ov5j7+F73Pdzb9Ru9Oz+KrpIb7qG/BVc+WdmtP3Pnzf5sG+bwvtuVyHXAMA
Tinv+2la9yyg3a8XmX2R/dLNA/U13hijScYrwvYTaJJTyjVJ50qk+crDXOKz
uLqTypX8Jq6kDq7ktFuuU65OU/qvWHphYnn/T1xL3qLG+34V1zd83q4v03Af
A1a7K17sL+Fi1/6kL/ZDaNnUN8tdrLbvF3ADpbnbmI2j34X0YXE6fgXXuql8
8H9U9v1TXFdL17WlXNe1B7uuD0K4Wv/8v2ndWuoW37ejfN9JWvOuQf5bfgnf
sqa8SdNW/wetOTzo0Te7o3e7he9+V7kaVm0u0jV/dIB2+CnIQrsaXg/R+CPl
khpa7ymXxEJqLJEHuqQfxSVp6jSbVqhxmXPlMitan1Auk21gz7acb8PmYBf8
XlywpmF5/SKIddddTnhxi+Ua5dJaXFoPl9Ye7NLeDAA1O5sV+XVoy5NJW6Zd
zV9rAWmPcK2Dg13rd6MZ9w5yrcdxraeCa426KR+docMuLu4P1YtjhFg0zhl4
NS5Ji+s0Lz57mVu4zFrB81q377QxuPxdXHqR45abuaLbGS5p6zB6cW39Z3Fj
O8oF/9XcTawB46FyE8xKqVzrHHfSKkfHuJOa7mR0sDt5KQjXnMSsOL4V4ijM
PdSa3dvZo7XmFY1wO1Pl6AC3Qwc+a+ieeClpPT7Y3e1CTpqp1AAUJ52vsEd3
N1Pu7hite8r1V7g7zcy2oaH5rJXY5GD3NE0O2csUCfq3Z2X3wwGF9+jqfofW
fejP48qdNLgTFlNz2Dsp6IimXXn9ICQxoWvdUK51i9YNWv36nEx8Z3fXyiRF
Dsg+bU1b9L+mgnl9Du1a0bW6t9zjFm7rbeX65+j22TgiazG8uXX3xFpsXzcm
e58V7tPdq6a1eX0XxDJQbrWl9a5yq1MrKqNHI/pdOsI+Y6wy+KyTYY/ut4/7
rbDVv3p3eTsEOlPuklXDsZyX6TypzF16O/oZK7yWbqaHW2hWv5k6uhmPqJbI
4fUtuKPSnKHr695WTevjym0VuC0ObjaVe7sm7GefIe32WZLRH9IW7qgLZm+/
uyyjuyyW7Ovc8TtxxzXd8ZZyx2zBTuDumqVBQhnf3dCbpj8yeGkW+IC3WCr7
eP2OQMecoUvq3s4u7qRQpFjn4o1joWX6jHexud/ZhUkd0P3yuzRdL9kgl2qZ
KPdR5+7tLbg3Sye/6P/rg7v097FuvQsmqnuXZS5c2RHvYvHhfx/doMHNNwAX
+oeckD+yi+aDRDknRchaQzS5hngDGqKg+9esybVu392ume5miXjBT1QXeZlj
WVJjWDVbRoKvoZ+8rf/DBbGrBSZfmL/3Xu7evy+FIDIqSSucpHWl3GwPdIQe
wzJDM1Ti2IoapUobJbJA4ndfhUZpc43y3WiUNaUV9mjd6HExC3c7F1hoUXOl
RM3cVeqwIUJTXKMhelepIfq5hvg2NISmyHdpLaI/BsdQu22+RQm2G7rFxt/i
Zw1uk/8qcYsD+Lnuz6tzY9+EG9tTbmyb1iVurMx57Fp4KGGwiePjSRRofdpY
dfjvHfbcFIUXciDyxVKgNUaIOHEiZwjDu12xcQa5xnk1Guc6pXHWLf7GOV5J
u2zSWvM219EuWhQ3DKObTwd05JuETaLzSUtpjCN1hGGuSb4mVJP3OKnS/6eU
FuLQqbZX2G0htqTjXGKBW0g72g/VZNhCZdpC9jVTfNyjNc4o1zh/EY3TU1rj
emVfixbi1lzLxS7auISEnuvK0UiJhs1UARtGaha7yavmKZc0zzjXPF+F5hmt
2DwlmqehrXWleca0ThvACVp3pyu4040CkO9Bn120udU20LhHbhltH6+/HC2j
RUbXQdFwK+worTAEJPy+69yNhrcdeNl/kN65VS62WwfKhV8VKJFmiNIXK968
Fm7w+pW4+W3l5k/g5hmGa3Jx7wQ3X2VDfGkQ9yqpLXpxWySeRunXwT5urknc
JLBD5rnFctkcooVmuRZ6CVpIi7t2rDNqnMOuBV/X5UZWBvBIBrlW8zokhEZz
yepcQ3GoWjr0/tBqGERCaC2/uJQ93+2SGGYt11an8GlNoczRVhx8ayGc1lZF
nOrT0isnQo8ubCvNj291Y96PPftG5+oy/3U5o4rCGHAJa9n2O4n24xhwBSU9
gpJ2LoFvNT0ajPedNuEYlDZguxe5i79vqHV5qeJ2LpUgcqC3s0RQrWNTspfm
ueborTvPtS6PC/D19Fzr7udDNWjdLaU5r0GsdTLngpe5phO9J5mzTINJpDXE
FrdVe/S2Ws+11TpIHGbbqorayrfUXi5OkThbi8ySfduhyfx9oOWaUDRijSZk
tTjUm7BUmrCMm1CGULT065Im3Mg14QS4TakJy1xCR+u96QgyLfM4FNRiXC3H
sRG67J2WlH5coSXZEo+yLak3IrdhNn3t2k/zTrdy7dcCwfVc+x2Df1IkR3PG
ZIQ+W2O0a4VG5DFL5wt3G7FEI5ZoRLsJZcgdfKwHSaNcc1aHaM7tXHMWgad3
xmX8k+bcAI5h3m2ZbZa8C1vz0Yq9u6+lJwyfb9G6hW/UoInFcfYN6178Vw/E
ythkkMmldrxkrBF/Dk1Mx65Amx6K3R1l3yV0++O5dp4A27GS0b1eT+pJBYE2
gK61cgH/UqIuWv+esfbo9/mkv2/x9Vj+ARZubUmJtjBRpdvnUsReUq6JxTRx
s+LoFfyVb2oeJeAPvDDf6LvKvv9Ca2eKz+gZAIn215BYyxr0SS7ul9KYFm1a
UZOyXqgUcms0I9uqPjVjG6cBNMe9WYIvyTS0WvZypLF9q2jjT1rUfH2+sY8p
+/5T4KWepYsXV/WMW/ZorSXvC6C/aeXRlcIuaNeiKVbgWo3lDiSj+RhNmHdw
0qpTaX3aJf4kNzzAwJAUEiTS8imd/ZUNne1PSkb/MfB1z7pxw0RGxyAjlzjH
gELc4uvoFVqqlfX+ttLiM2gfLUFdQh6LlvmUFUpPhBIoo08biKSA0zyIU0Y9
RS5l2MfMpY7H7DXScEWhSCnuEt20p+z7D4ErfdaNSCei2MGIn5bdPZaLlsfo
KVq0x9LSgroBeopmSfivGkLhntIjUZT2yrwIhumwicmGfCIFdnA4xpPQ+nIs
iqxx0Co2TuVFcVzZ92mIYkqiaPKiMLoR4STZIOcIcZtq1Uqs5o7l0qHuY6fx
vd22T1LuQ5c3NF033aBdL0lADefyMnXIK97zuuMRg9aUGXXaAM4S7XNC2fdJ
aJ8Nauee0s5ztLOWj+aBPq1csogH+pKjnFbbg+LZhpJZrD5JJvJTqfqPhsLo
9Wn3Vw01I+URkYfpYKZrEZViU0S8r7GypDbeX7ms5PicVPY9BaJ3ci09tm6o
cVZgrDQ3j6ZJaKTlebnht9C0Jh5W3AnN6ydThCtp6SpU6mj6Bg5mkg0RLfGs
sWb1kg2SiJwA68Zu3fnI4iyLFi/MHR9epdmXuPbXKPsuAusT1Nit0tg9NDYf
neTSoO1SJycNtfa3p6I+WgighgBKCKBwmvzTMJdOFA3iKMkBtOGYjOMdWmTx
Zt/c1dGb+1pl34fBdknN7b7grFv2aN3nRq8iEXgBjGhLq+Gb2jz0Mq8mzJSu
ZjbXQofmE07j2NcnO72iRpjrEf4DGyd4oYSD8rXzdYxVR9EQ4qJbKNEXX+QQ
4mmOLp7rlH0fQG+ozDlq866MdiEjF3hlJDJGVKA5Ml4dhQqnhjC0gusxhFHn
hNHEwvCBXJBkCORQYiyhsPIPzIITwSXjX9wkM2p91v7t0Vv/emXfb6BztNT6
jdL6O3A33aBLV13NcgWhPTijm4pEuFK0hELSKsUHEEFLIii45UvIgJYqlkPh
OoU9VZAwr5eKpYjF4q3Tnc63of/XIIzB8yOMX0NXGO8jDKN7nVk5FHGNglZK
LqWfSR/REpm9KBP0ccPdg5aslMqOlFwmuVFTcl5ree/0M77c5k44QrRFywRi
GR1dLKeUfb+MPrJGYukpYplDLCNFLBNar0MEvVwFgITIWllRtuDOK52Pk2bf
r/ULan3vYoWtX/hGd83vFj/E9hmw4bsEvQaKPEaQx+To8niBsu8X0U22SB6t
Io+xzVYYZ0/GilBYUNNcsMwy0sagJFiWwfdEKBwvtOYuHLjLLaUVrRdU6dVX
ICgvJu8uObvSxEMDlTtqlddnRB7ulu98JHB5n4Fk+oq0BpDWTJGWlkJ6eV5a
L1T2/RykdSwnrRa9h7cmOWkN4i6U6DhOfGiTD3qxj6YV9PGIwzoJiff3SUbD
JTIqISPxjpOu1LcnSkRBdp6afaiIooUo1kgULtfX7S5LBHCDsu9naM23f4IE
0FcEUKK7cMeZKgIY0FoGsrVom3vQySXDDhwaavWA3IvmaP6CHgAwWC6DT+Gt
of8lMmjs3fjmL7j1S7Q/FFUig4bWDYyJM5n5jqHIRSstfLGy7yfRMRqSi/uC
c27hzjKAXOY5ubBbLOZ9rg+pywyVWW7oh8PBGWRQKzJwXnq3xU2Q+TDwEzOm
ISuPifKJCvLokRT4FvqKPGrY6C/MS+Elyr5/gA8OclKobZLPuDTUmiKFGsHJ
ti6AnXjUPdFQ2XEiHm+YkFB8UO6EIpYe2sWHJp9yeVfRTIULDJ2K0SwAciCp
UKbKJwoIpYBQZlBZdo5OE4mHFtdVlsjnpcq+v4NeMlPks0PrAr1E85jX8jIz
LppJy+ZJJPOlgT1rMq1klx2yPgms9XJ52pDUeBH59Z38XPji3bVP2aVEHytd
itHpMs1iiOg4jJyrvWghK4enF5OWG1+iwV6m7HsQstlUZLNh+45xAxaJWGZQ
aM6gZ+Qg6UQtpufc7qZr+VAOp+m8d2Ekz2s1etfTtqn5/6dJGh8jFfdxOvQJ
iWkongkDTE1CpethREvGlMhg3ueNtf/PQFLrthvZL6QEL6k1Wo5dTSHJzOJj
ipCmtHbu5Dln/hNJ8RjHMM7+Jl2J951Qij0aqD0t/m+1QT9jUFkT2KKnIQDX
lfroSgXkxmJrvLQ+ZSCxwulD2nrfeQ5izoug1hXh1cE+Lzu2Wawd2VL5sMEP
f9gU/WJ98rDie7my7zT62DWK+AboYz3amijim2CIyhXYdMVXiviqqIbEdz1t
kKSHEXRnlL202py02Kv2Av0EBUKftNdUK0LZytmdZT2K338J7+9BTOxGlMEo
Cne3R4yX1XsPJ7AvVPbJxO8XKAKr0d9GtDVVBDZCNYRU/SUCKzB/l78oWxo+
g3g4pVMoMWklunGx/qjxejEvxgZipHWQ++kkSQ3clq58d1T5qqLlLldDlq3d
CmTp1OZxWleHleUrlH03o/MV5l403b1uqWl9rSJkcVc0+Q4Q7a7rww47QbJu
+ZhCNKomj0ZxNUWasO3qo2TxOtJl76SEdCu39Ym4k9KLtmipFMEes13NWHF+
XpSm65z+xW8ZxZ5kItBd610eUqCvVPa9AwLtKQId0XoLKpUdmJkiwQoSNHZI
yQtvSx2hvgcGzQ8YJeK7Ro+ZexDoCP6M17DLJchX93Hjwpqu3DQruBfFZp8v
ITeXFPeCqhRBsVfZJ0GZOCzTsn1LRPZFyj6Z2T9SRDan9TB2YpLeuE7rNcRw
HCPsKvMiZA7EIFdTdm0gqMDTdAGQ73R8fJiTUQ0ZlZDR1PWmUEYL2ZzIdaVE
JI0ikk0oQ+9hknS8DA6YvvhiZd8b0ZXmily2aS3jSolI5vA1XXufdXVkiUhk
+GiaKys7bnuKcWGAz4w+RYMGgQA+ZiCEwvki1MGla/iuwOrLn8V1gwJtnjgY
or5aRQRzBMft0bvGlyj7boQItnNdwyWE7yXt2ZXDGhKCkitPdF0vlE2YIZec
E49saI9M3JIhpRoFCH6xn/Qi6+VFZkTX3nVe+sdWosMsAvDLq2icwpjPSReC
W/8sL1JWNoY4B4o4h7Rm0iZHF+eXKvteA023p4hzAnH2aUvLVk0xasjvGyji
ZBHvIRrYQRFJIroZArfabnVTHWMIbwjh9Ul4zuNeCGuHZVRHdsaLZQpZBeMV
dLrPGev/8VJ2BNaR1UiRVY2ux+Zq5gT23ocNhHNAFagJ7DvR/65TBNZCBY6X
Csz5EP5VWsIyotuC6NKpKqgr1Eo8B3E2SxtebK2P4S7hSXc1T/Loq5NuSdLl
HtCIdGMvolTcegnD+pGP8TlxNETDsnBFr07Q6TjrOyVBVizHuPtV6DtL8otf
puz7G4GLfx/FbF1Bluh54m0kghQPZCM3vDKPMyjaPKRsWWgJ8fHwozbdqAxV
6ZNwOp6yy4DWA5KhiyvuetT2UOd00JZbNKk2LosYStWbyXiM5XNiNfmCn3Uc
XTLi+z83jPVsz57Gi7dRxHtA7frlyr5vhKBLErT7gvvcwsI/hR67RVujXPzu
2vAcva8r7QJjmC74zUzf2URxKkt2TRubNP6vYU6oNYTakFC5Y/qoz1nK7ZxE
nWcVOpmh/MpAfj56o/Vzcf65scllL0jNGW2hhNujC/dVyr6vQ/dvFeFWtD6O
Xmw7NL/o/x1aj3NhfCtiriIxn3VjolL10eTmwiVV3YPQUX2CpvN1RNt3oqU3
L6TaC6Tq/Z9NRaoFpKrpYemptP9znGcJx+EiSXMFoIkLoGRw1NgxUf/im5nk
7DALfnB0wf8ZZd/XoFdPFMHXtN5Er24U5b4Fle4EeY46jGZ9o/JDTdbsB8uT
DrUAkt2qNlTVuvwryH8M+ZdKID8PIPAvfke21MNHnk7+Xf8qlL82hltaiu5w
QxebitQLSH18MKlrjyz6CmXfX4LU1xWpN7SeortraQNmorc0bcBM7AQknHGN
5Aa8MjPTpKJIe2L72NIROM6B/J8SGboMohe9lnub0FqKRDWfy48vhlpd6k1Z
zKzPWaQ92xALue4qImVpTo8uza9U9n01pFmb+3WRslZvIdJZTqQFOrKWdmAX
fBNpB04C9RUZ9pGyyz6gmoVbRC7zRwxJk5cRrQckVxcgLwTZkiAbRZB9CNJ1
ca/RtUHF+iBy9ZmfOx+RAQ8eCt4LJEyRES0c1PZJwq5y6UBy/aqcvnYDwPeT
3uzKdUDrAnLdXJrGmCgi7SNHG1X4+76KqVjao4blyVTckbUndXMs5UoLFgKe
kFwbkquX10Kw/KL/Rcz9XM7V+f+rjUEWir4uIGu22TxL1KlqE49aeoGXEHgR
pC281Ie0rknqPXuCxVZpbj9qN/+zuQyWU9r3U6/KaG43Vt0lYZx6cB4CrTKE
+/8QYHBhoVa6zop8iA7PSWDtEW41SPB9nV4fYRvuwDBB3Ow/z06598cftcsU
en2Erq8NkW3mhsiqg+CgjXruITmc4NBaH90YqwmafUhg+S9eS0jQfkdEG+d+
BejYJTomznEP6bgPLvl9zmtPAOnB0+OM5zyHRQ8pMhlr1bBorPNunFXXHl3n
zBaBUAIJWlhfDAgLpwG7HIxifeGSEF3N0Shs7Ch2QGCoFBj4pJfTUKE7irpj
IzmioYrYeO+HfVssyGiJDFcbfnAe+IPagOtLgmzMA3zN99tW5f+P0XoEDpgR
LfMtBmVAW+sKBz0UjrF4ZpaILgfrcXml5vbzrKM51MNi9biVfkIEU1KDiMXR
048KDBMFkB6tB/AbXMiw2jDsNoxHFhBxFBAA2ImnUnQZxHkY5+thUInHlGaE
w/BIOLiv/5tvst+kgSGPhGsdGB4KgFHDeBSKaZnGoSBn0zfUoD/K5GmzbKZB
2N/FYQiX0ZdsLseB3chHF9/WlX9F6yHJX5yH0YrDuduxgrBFFbR+xsjrGc1q
sJ4obEhwxyOmVKKBDbgTPXDQ1RZMxvhoZNiTfvsPLZY3Z+E4Ca0xIzj2iAax
FAkI7IZOUleCXvcaF1ls2nEU4+KJrRwIkv8pclMS+0jyOektaOgpNLgwdAHC
bgrCeWMZcK5TMmR5ngzmIUSNLm8fSchC7+UGk6fI7g1Sp+FhZxCmV0PO3/GW
xfLDxnznj9hTafVV8vi9jUAT0Nb9vO9+NOb9Lr5IAJjTWlwFLSnEyYM1aIIG
SSFtYnwVF7FqFLQYZoMHedEQCrxMaC3qgCnYI9kXSTL3rvNu5IXPshOi4Hr9
RpAApJE0VvtO0J+XKgJ72M5G8UOglg0+9XMBN/bJBGwM+goZPZCRjrHR/5z+
mYOMBkp8CQ/24Xg2dP3OtxrzXW8z5rvfsVjeaXJIbARew4MkqQeMb+kHZJkA
jQFtabrBpx68RrCnNHoOaYIxAhfVdY2JjBH0rT9pXCWtNkezQdWJdyov0jN7
H/ce7YKKY5IM7ozb8I5jyqD4LCxWDQfFRVuUy5koAyaeY2lfrmTktYqAiMZd
14iJMsga0RYtnA3eOKzKmLhAhF7f9XaLx/fctFjeZcxrbjZZTsJfzX3QLQ2t
txJN8oBxDmjPOhbcivfTnxnHQgYQp7nAtYU60UaCxdBIojk7m7dGuNonSIYx
JIkTsQMnkr/8RG7YINEkMmhbK+ZF5vCIJ9lVHRRIXi5ASs+K2nNRK1z0aL1J
XFQ5Lm4IOvs+hNgpGKQ4iI7XvNvS8dr3GPO3bs1CMlMg6YlaUSApoFi2aatR
IOnDN+Wtca74sIQ6mSqQbCNe0Z7+xGNQGwkuXmywOfS6yI7IRULocW+5Tj9q
3c2EHs5p9UGPFp6yzikIqMwwsVTtSjKrjimyAYm7vGd1pOQpaHyKK1A5DeDS
fNUGwLUKcFxLMCPgWnsxNuFx+0P2O3MJjxcGTosHh79/HyI5tWr11ILG197i
aLzNmO+9fbHcYb9Vw9IHSl/vWuNBZulB6t8xlr6JzfEcjFUcQU8UGAfwj7UY
SWa7DxUOed9aUMNsLjj4SuBHy5DWBSHo+vppzoZ0EJRhkChTFiK4HSPoXO2M
2mIzx96wsebNvrhCAUSqoMlsN60+TCzeQAGtQJjMpPasjiPO9k+0vuCQtA34
E6zzbrE6j0l7rzHftyDt+95nzPffxW/REnIjm6j5esjXK8MWFtP52Q+QVVGs
I0ic5wxjBS/cxBndrYA6PwIrc/q5/lp70AIHZCNYx5bQqxT0erSuQd1YoW6I
agqk+s8LcFpR9SYglGH4SrGsUgSlaUKxp3iLfVAno+gGoLVa0wV3o4Q70mU1
dNuItprnDblpgByhxgqNULtzgZlD7caFc/sD92SRG+SQG9B6LUau6+CftHb4
PhjjjHJzebR73fTRBLNePGagPTqixeCvG6JfYNYwWFWEmYesT5Ct5RJ8jR3c
ZwAWW2srDvO7xwN0+WoUS+svTCbVJJxpPj4dsE+T21LGC6cYEWa65qCrMLet
hNgpZIKN/PjsSpAN+W0EGOuxOx1cpx1gC+G8biG517koTiOtF+D99W5hST5I
K89Zq3N2IsgxdK3rJhw8N8R/L6Hos83dIiJnrM7qM70a1Aq6jKt5jB5Q5Hhz
37Cga1Ohq6B1DRXGGmxDoWuM5KI22btaakcD9z9MKLkniGFf8JsXrMeEObGu
klRMSBvDprL7tGmN6IK0akXSXrYfUCN+K8EETXXaaiqGaSG81y+k+PqF2N/w
QJap2jHlPTT3/4SY6oOpsRJF7AIoYwc8ovqlhK8NlEI496qr4Poxc3zmtRxh
kr5qCa41gsuptQVX20o2sgBSXEK6qyDVqjUN5/WahlRXeWisrhKryKXBINE+
QjAhTFQWb8kkmASpZNi7SAc7b3fWcw1arXd1WSPOoLDucQqLOFsI9w3E2QKa
N77fmDf9T7bvaTO7WU+Wibm0knuQ2ugBPBNkWZ60XpoMq+JZBwloLUZRwtlw
9DprwicvuNLlBV5j55K5NKc7H22dftSpsh1bnGyMdfr3FLzKeLy0IrQ24gGv
LErs+Wc1VmO6j3YGclc2MCEx4UnGzRurp7ooTYDS4GAoaT9tOHNA0YtVVWD3
WFXdZ1XVGwmjH2WMzA/+ncXyd435ob9nb05HSmjyeoxzqppD5rLQ3eG4KeDq
01Y/NwojI3EJV+yczZAwc1Vd3aLMKQIBH2pS0nyBmZfgY3YZ0LoPzdYq6PUx
CAd/36k7+4m7ztvUmesz7ztv3bGt/a1joraYMNFTzNW6zJ/Ux9xHiB4Tqtip
r4mq8dGpWguoel1g+N7gDB8rJKLpb1uaiKQf+jFj3vz3jXnL/9ylyntW7NK7
FuiyVIOlxQHa4c3iMQWt/v4JWSkQ4ISsNjuxiYt+mxxfE4z5+HhyCV81VFtl
Tj9GVd4dyDjNNrVuGd/5YqtUBnlk8pTXq+9zINr5VF2dt6r5xFH7nNcyJjJ0
y+zLZkKv8NN9hvHAPw/uTBQm+2BydrWYnPFbXx8YyDeKgTQ/+LdFsxGLb/4H
lscf/l8Wy0/wR/nRQhU45Ky/C7ofdFfIHJ5QmKugznZQZ5Aw1wNzvLWWL046
h8zZOf15RWNUqvngklVSh7nW77tg8CrtFSzoGyr0NbQeQsUNEB50B5M2wZ5W
b1JA/W3E6m85gFG6jRkUhWj1YHDMUejj1it+4XlCbVJ6EBvjCXK6CZgNkm4j
AjNb57ovjmv81jcERvZNgZH9ob8bqEVC8ccdiv/QmB/5SWPe+r/ae3oRnatR
0h2iETnXdjJhEpK+hv7MzmZyweEyFWhs4bt/sSBnqJBLwGxtGYSh8xnWYB0m
mVOnAu9+jOzsY/Tsgg6JFa17IHGizVyiZW1p2YtGoBhgLoCw3Flvz74u8fkC
P0+g6xkT/dAQBaV9eHwu7xvg5jK7Q1qvK7gV0IMcPLRWoF2NKHMXX74feHP+
4BsDW/yDgS1+848Fuu/Hre77EYLuH1no3vbTi+Vn+BQvzLFXgL1SsdU8ELaH
YPYG5rFEthcQ8aDoumTbgJ0PW9cx8zyhTGryFg1O2TBDaCSoGXSPBWWs7yYK
ZVxXVYKyOcotE46GoGwePIfBR6yLZb6/mY3dPQPkbGgRm9noB3yimVLyvIap
Uk0xwOBoCBrjtFiXYOyqWd11fuubAiv7Q4GVjVTbTzjVRqT9lCXt7f94sfwT
Y97xT+0tcL6vR8g5J7yLV4NxVue/+dHVxCJfGyZMPHwIK2TGQIlqLlFeA2BV
Q1uNoK00jvgtWxgITeiR0swtDAC4t/gx9kkwHhDpKNqXG4piNcXFN4maGhlr
GMPCTJ85c+o5mSTtNRXHptvJECf9z6Z05+jYzANsvCV8cxAgvCVUSj/plNJP
WaVEuBAq7/hZY975z4y56Z/b6+OfdGjhuY1zEcQ6sGloq1SwkcJAdumyZaJj
qCntsU8Fkh6FDQ/sOyB12qKlT2tvKnl6idNVYzvYbpyG2gFZ6ei6J8YOsZch
WeFYko8R7ghqe0RRJcZQJtnH0Sg5mqyU/GNijMFcaHa2MkOamxhfuuZq8bPB
b/UG7S2JM0/svDUwaG//GVEzxM07f86y865fWCz/gk91Eggl4EwUmDhEnQKm
YQ6mraDKNOOGTeNZa60C0xpKTRdv4Ul4HY5aWk9cGMAVYjCGtEWL6K8+2KqU
WiBRYizZE8BKmy7snvJqaQqnkKWWsHG0PBMsxkReP738IwBS8Fifue7Qdea3
MC0toI802Axj6WU6FkBbtJygdafA7IAcpqYOuusfOd3lTN07/kmsu276ecvg
u39xsfxLY27+3+2l7OVgnCkwsg82BIw+kxtOipiDw3GOQy7zKKHUtGLGgfX6
DautR6zuSjhkNvvQZwOFwyF0XA0O+wqHmwg9owlx9PJmdRdsVuCwxtRjzeFn
Y2qsNbWvZ2WY3UJXx9DxN2rpXK5lnTjobncuGFIbrYPuYUteuzJ5fpBzX/K2
+W2pG//WnxSL+fbAYr7zZwOt9/NW6xF1N/9vTJ255ZeNec+/Wiy/Ym/E/9ws
vXyKrqcAuaYAyeFBg6GFtPiIgBwiRbeGAfkESEnRpaEpaiFdTbF5xDpsCYs1
rRvoxJnCYh860anC4OW9vHD2pp+A4VO+nhw73KVVHW0BUTdXIDt4eken4CMJ
H9g+M7rLiXXhQ5fYPiZccMGHU7o+EvWasgW0w6sP7Q6/jVVkEA28LTDT7wjM
9E0/F6jIf+FU5ALYW37JAbuA9dZ/vVj+zeLifo1PvbUPt+93jK7nuC2sLTc+
pdIZ2a+hS7dy6LZKdrlnP7FgdZhjlfYFDPI7KnMPjbd20eWwlpPIbujWx7GJ
Gp3EI2XarOMNxLbao98LB2noOS7DtFQwxVuCUTS6ppRaTjAPFXTZ5VwndKu4
VolBnVxNUNcDUCNtGtjwdwY2PNKm/9Jp018Sbcpw/qoF9PZ/u7idf8en3lgB
VFo2E1BBxvU6nrxjL0dmCTK56HMIMhdvQ6PTFi3bROuIyXT+2Xksju57LtDz
F3VCe5ZQPvkC03mufLgPQktkX4a5h1m4iOvO851f5rhDn/kcxs+eQutlYszt
uQRPIdP4qNr+cGwLUHn/WEn0zTA5vmevpZvyG4DbNYXbTVoPctxqv7Vz7X4s
7/LbIyUbeAU3BbFQpGQDryBUsrf/uuP4NxZt/puL5bdt23E6aMgEVxHB73fa
1iHzID1ALQrDd+OZmQPUFHATDkMyH7HLJsj0M26p2GnB4brCYQEOe+CwzpdC
GVdyx+pynHsWh+PQG/fJ/tk/Nt88YQaU2vwN3iflKby63AduPPDRTx985plr
oRfdOHBmVKMg5jYV5sZx6jmrNQ9F3zF+e6Q9A/P+riACujkw7+8JzHuqPZm8
31r0+gV5d/7uQigf4K/g0pkiKU74esajq1ZLWk+AZTrmTMr0mjjHGHiwtHC1
1paS2y7BMEtjXcF3HeGTG2TzanQdqFaIkubxOMgAOnKaG3VzcZBncxyz2Shs
is3GAfsjuCUoZSJLsCmqkI5eqdMHOcncCY+lNvpRAssdBcsaWK4paaNGAbSx
I7jGuF8RXYLlHn8gUoSBQX93EB7dEhj0WwOD3lGEhOTvLORASH5woVM+tFhc
AnXkBnFCLBmiDJlSO9MPyIyKHpxG65LJqYBZULulDUUbUruOTO/Y8dxQw49s
lKKCe9zQMf0/BKhTgFooGrcEvGvx8EoSTg2hZ2UQrw9uR+CWFGFgzEWJGh/J
BxZdaJW3XHZ3aCcEWm55a4JoiJvkmD5C99CCFo/i7kFQDN5Hr+tX8zoj/RhY
5o5+dJb5tsAyQz/+ptOPv2P1IwNJqv30w74q3BKZVKJqRFa0bkDkJK6L2ACM
IwXGAa1HcU49UZh+IO9hS6QFMlaYa35fEHc7IRKXJQilpQ9vYBhY/oxfIJQ6
fyRTgM+Uigdq4mobgXYIaIkWq2dlij3p3n3w5Yhe8GVfFG4ow2T/wndcaVGY
ygxfk4zdwKnsu6+8LThwckWae9a2mqUM25Bmiz8ARRrY9o4idbb99sC2Q5H+
tlOkH4AiLYldd62n3QBEC5vPF6fRW9NaRqw3lmZQXUoqw3EPHBe2sMwKCFdF
W+bhEOZKgXnsdCzPQurQ24OOlfhppEZX0SiRiZ8U0889KYQ9hwE41p4118MQ
5SAql/08lK9Vw1I3YYyfEF4B4Ujv2k9ctvU7YbkOv3iou4gp7imaeBfeQqF4
CyOo6EEuHeC+2vPKOfaDwW3T/VDIgYfQUcjOQ3jvv1UU8gLsu6yHwAq5Yp6r
iGxuM8WhpVebU9J8it3coHkJTa1NU+5jIH1ometyXYHrRuG6R2tH1ZkL1llI
4G4AtwRl8wRuSsY2tG5toGZcbnakIF1CNfeWVgFVQJoHQ91IW/hExGeIOlUr
swsMreyfbOA18NBYjewHAOztG6MWPW4FqjlychNYeZyqZxsnh/L+OntJtNZX
AN8MAPfexi2Bt9HR2M7buOM3FI29gPv04iJPU5c+/WFf+k9bfrENfyUsuGz1
5IFTuO+n2cqZoVh+y3EF6prW3Mk3FZ5LWu8Qzz2F5xJ6ekg8a8q6pnVNPLtu
JSifdihXykjX2OnjEGWZ5OcjuLDQyIPsMZaZ8nZEy+vU6KfO2OIntUZBWCdM
8zxm9iok2wDFbqsq6Yps/dlGbgpMgXkLHUf5oOi+bD9MbY2bdyreEzgVHd3r
nIo7f6ujewnRlmEUp+I0T+G++8Ohyo3L09nHcM7i++mWMvnZFnVK7Hid9Bo0
4M9r0xaac0qkjRXSSr92pW3GwAdf7Np14J12RwGecwuiT4xRYB5qU19R7obs
YvRcjVsP1LEjWwIvKM9L+NM+NE7DKy2hjF1a5+umKjOkjec4DKEjl7i0nrsN
WlfmVvIcbv2Q1/+H4M4W9Xp7f2tg7zsq8TedSvydjkqkYUcARlt3B9Dd7aJx
QJeAqI0RtLTegyKcwZ11z6voar5Tyj5WhDVQnBOK0wRFLyAbXzF2hePMc4e3
zIizWchZWK4UPmOGXnhwMTJVzzQmHERK0/clcGv9Fk/3MzITno96Cy24GRlo
vZKJ+HnfbQ8LQX3glh3KT/YN7Cdu5QML6PBysyNo15E0oR3qnPDbWPMFxhma
7zec5nPG+a4PQPMNGTjbxz2Ed3/YERj7m2lYRa8RbW1iYoQ2aWdqZ7VaGXRw
uz7dx4U8xtXsb8PkullbPqZn5lz23YfuE2TueRz+ZK4SzlngUGtdgunEpIM+
cBLTaR+A5+cgBHRxRRwM8ZUdawhvezjVSi34ma7Az63Mz63Okg6vFitj+wWk
rQIL2dFWzkKe/pDVViNFW9VESeC01WDDL/ZW34+JpmZJNW/WQYsYcaOSE1oP
rLDPQDnRFi1btG6JFpdvUiPsx+hHNh7zE6wC/eWqeae0HoAqIxP9MLc5iTD2
4joPuqP0xyzBFV99/MQ090CZGnCVgEsGxqPImZe5naxy28Nu6nEVUbVY+GK2
FeLWbUboVhy41WFXALv1q4XdiN/GaunXl6glZyDvpgljAXGP2KVO9FJuYKew
6R5DTun7w2kyI2ijkwpp1/l9Pvz+MOuHD8PFMBKXG2dmuvRt0pqZK62cE/oe
c4ZzpozzJAiyl9bE0wBrBTx21fi22FyKVRTcauBmTNd6MoaZ+VWi3dKYALOV
2UwOoN00S8hsrhFXfJ17V4srVgJWhQVOfkeFPWR5KgKAPFSNAlWVyyEm+6aI
TVvosHIVO/cw5WjNw5ap1jXuh+2pxgpUG7TmXZE39phduEBoBJ64oq1JXH/w
JCMxffCkPa5tHpdaVJ6TZ5sIm0tQWoEj1jWocZHalaS2sh+QFc0OZb3WgCyt
ePe423ers7T0/xoUWB2ARlu0HL9a8NlsOiuy3xTbmSgyazvrJeTd49xfy1yX
vJ5C3gDk8Vhh37XnSuTt0ZpbpwF0cwW6idVk9kvOXBDruaYwyGFpG6ermUHt
+Q19pPVGwbNnugyOwGDpotHwyUbGWdHC3YqtJwvMK8KIPHku79wNAGo7KS/2
4vwXqWWRPHxdK+a0BY3j54fGbfchbrrAnJ4OvPxWAbBy63sWa4LQLd7l9a4/
eNM0oufD+3v04n1bK9K4Tmv3dBVDTd4tQnOJtS6hfRBa0dY6cVk4lUgvDycn
5zyaM6BZK2iWQHMWFJ930WyQo2us22ecuU18Oo1LZNjUBx/ZoBQn4Ni1CrbU
st3SOoDGeXUJmhs5T8953c8jldZ5viswxnf77MdQQdJb6BDJmtcxe0OFRw1F
buoTy5y9YN8QirEP48zXf1xhrwJ7LdgrnSr07Hk526IeZq4Xj2gIZNoE+rAa
wrGUDEM8J06coIWgIyi1FbQ8bu6BNUyVhBrMF5uTYwpIU5va9W7cCYUcpqln
3nN18HEDYmJOF5EbPU7ubjxAlrbusUsL7VWYH6Wzesuo6Z3r9GQsv39GW5X9
ZCx5MDWG0I2SkXX7/EDtBsRfWZfeuKcsiPgbmLoh5M3Z1NaEOdTnJMMq8pai
gW6pQChgyhNdcar2NjSIT3FpSdMBkqZulHS5pvD7OFvRJwY6VayeiJfuJ3mn
Fx7yyYaF2OcsaNe9nILoORXhjZVXGvSqiYJEIfiJaiYYrHuhgsdx6IJNwPAC
dPkZbc3CFENncH5d88IBSNb0zGKnPHB+YtXQAyXW3vieLeXLzyEEXAUaSYcG
ER4tdYxP6dqP7M5tbkndJPr/GoWm2laW3vqQrze/lZ6wkUOqivYtliEB1Vqg
3vMh345X3DMR9lUljpsP26Wg9WYIlAOn4XWVArV4PwT2o+6Qq1I4gJ/T5j4x
db6PntFi36dnzrgnOdbKW8YYb3dRgU+WGq7E4xf9z0PtpfV+mAfMXAeHnsIS
Y0HajJESALZAzgNoPGrPwRTJviB2ZPzYMgWjQp0MFx+L4KMDHr6G1toIepqG
gMQa4m6mcLdN6zowXbRl/3rPh7xl8OQdUKmFk+mcuQJ+Xl8JfmWEX+XYO5PO
DFo14huAvVnuqPdk8Axk2qJlF9iVtKWlvIZxwrWHEXGtMHQaJ+/TBylgvhKy
rjLs3ZkSQr+KAs/IuTi2nl5edtsymoNRSpakxNk5455DKRoVEjmg7BF/2oDQ
DtIWQwJuXQGO48Ex1NoWbS1Y++DhCeMPrhNXVeA1e91WWk0mKQY+wPMe7kHU
k0Oq4yq5ctnu+2sANVaAGtB6YM5etPtru7XY1ypoDZBNdSEQb/l4LkFrEM/y
0GZv9m2RhXEj3d7XejwwpfLIH8EonqQRPKxFCercjI7KhLVv7tjlBhjZdH5s
a/tAi3OtbFe1VMMMFRbO6vp4rlRiPFZ3Wwp9Fejr2zN1FR+ru6FKpHfh99V5
LhSXqYMT+Or+mOQeSjz3xYZfrPPOMKFnHk05myjsnYCq6yhCg7nEZwElbdEy
obXLinoe+0szDhOg2CgoVtByUgjPPBa5EjY3N9h7f/6nHh2Z4NEmCnh8O2L0
OevplTGPtfDo1ZkKY6PAyAhW/ixXOBWrDVzKsGZl5611ESyBYKVA1gOCI+Uo
+3obhKDZP57cF8YaMPrFNtg9NCe3S6Qv8yl9VuphIbL0ax/8eTcuIZIrJhcN
/FBghpvcgAB/244CaB+AjgHoQAG0zCVtp7DKPRuZGDeBuAGbFThsOnGp45CC
ycvIG1jcklEmSWwlpb81cAsfbBWW/1gry7ksrerRec+30WhOAtmHqFv7GCEg
yJ904WslaH2Q4oyrRFXs1hVpmOqTrBNiyssmHGUsFLwqWjNd3GQdsh5iETgz
oHF3LIhbvbGdgx322dyw4mJrDdqshuYaxnQElpRe2hBS6R42r8OSHYiU8DTJ
cAk23t0NJz0wJ7PAy7qN3XpX4JUYuynSUqxptmmrCeRPW7SwpmnNLQcBIzWL
tBxbEYwxmLBISCbDZ79Jlj2CoWFVo/juJdPgDjxklwJs8FGtskISG6egXLZo
q4D1c08EkGRHVLatPWKoB2iGyHRqM2pqOwzJiU/3ixiPm/ClwcOaBooiKC/M
gmJssGhf8OJvC2sHtdixwXB1o7A0oHUBlnqK1WK3aqrw1af1gPjKTvDelyqr
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
+bvVHiKv3fcW7vuVaB/RmFIbcvT79uM2j6jGdQ13dnAu+O6+Ld8W7Yptsa7Y
4i9FqwgD0iq5UOzQ7TPKtU8fdztcSg1f9ffk26IPvbemtMAUNHwl3pd4aLxP
fg3nqrfAlFqg7/2J4B79Ha4vpYfv/8b8/Q9XZGGIlvhz0AdiFZLq0UPc5pxu
s8Fla4D345v6wfxNjVa8qRY39ZcRxOVvpUpvhVV6ch+hlV3cES9Tp9z0dMMx
Z8zCCj6+5Lflb3C8lNoKt/XX6Kj7FT9vknhT7sM9H7d71T1cdUFbI+XSt+IL
vjl/wVNFIoWyb4AbK3AT/CSjvoXEb/XpksbKJU3iS7ojf0nh0/fVeIS/PBSC
b51p7sub+MvP5L98LVQn/lvp/zuTz9irWXzfFBEqn/vB/LmDM8r506Y34e9d
ZCa+jaF85Z5+bMn3djysjOOl2Z87lEvwlzeg60g6hzYcfdDrEN2fYmL/6vaJ
An2C3/OPD3IRNb5NU0+3KVfAl13h237+Ktyy9tW3Kl/N61++Cl8omir7Nf/K
vmWxXwe4wSlmytVrWuQdK3/V8UDfHOU8J5NP0+umlT99Da5i9c9ci8+8c+XP
XK/cY2pl8p8+pXz6rSt/WmqgVv/MDco3po8EyX/6RSvS8oaVz/jipbSsfp6X
KrSkJWX5T78MV7H6Z16Oz7xx5c+8QrnH9IFG+U+/Et+ohV7fvfJ5vlj5dHWk
M36J8mnNSK5+xi9dykUafeTP8+UKF69d+dOvwlW8JveZX0kO0P+26tw+O4c/
nb3eJZ/+iuTKaUkfP7jKeb5SOc935M7zr9EC7tNfhXtY/TNfrXxjGjvnP83B
UMaJ/JaVz/Lncd2JN5g+wDV/ir+IU6z+tf4XAMKL/6aVP/0l+MashykDjquf
1vb3o7iS6aONr9Z3ibv4fH2DFoy/+qp8l8tj5WFNE4UH/ppauXZx/hKuv/YQ
lAlMU2ytftWvVi4vfbp9/tN/Dd+4+mf+uvKN6e8q5D/9Dcqn//uVP/2NS/vm
n1v5PN+sy/ovrHyCb0m+/mCf/lbcxuqf+bbkG2lJx0zyn/6byqc1sr8sd8a0
IpcW6zibb8fdXK0zfqdyHs0DOcy5vwtXe7XO+D3JeeiVjvGtcp7X4MoO8+nX
4tNffohPf6/SFl+cO8+v5s/zfcp5vugQ5/l+3I3W0V96iDP+AP/X6fIvP8Sp
Xpdc0mHP83rc5GE+/cbkKmhJyxRWOc+blPO8+BDn+Y5EZLo9luTcYb7j23Uh
NsottEsu4tTSr2a9+YKlXygZrIH+hqvzDQljnOQqr8rpJWmn/dzJdVfv9OLT
rH5SIUkLsbWU+8mVz/1O5dMnVv70TbgyzXjsrHyedyvSPZb79K8pB2zGy9yM
6znMp2/Bp7UONDvEGW9VzqMp8MOc+zblPJoUDnPu25fK9TBnvCM5D73mhzjP
nbiyw3z6ffj0Wu7Tv0irUcDmaaUFJrlP30+r62m/tfLmbuXTaXkwPs0m7BTt
tzN6zT1L5dDmzvO1uIq32/OcVVp/kPv0DbiKv2ffzEE96zT5HZHspyt8t7Vb
yG2E3/0q5W56yhk/jUv5lP1sGmfQop2sUU7273BlV4L7Sq5MnravPV7wx3E9
V+zJkvZ5ET6d9nK7z/hMRpNaCP5/cd5b4ou0gaR5D/+3byxOL85eBHY+OLeN
euTyf2DpyTUdKKkRd4O+cV4VX/bZpWfWrNgg2OdPuh5f7j8/8EmHyUlpmeN8
F5aeL5O64Y3/bP+6Fa3RYIuP/z/2OG/z6uY/3fGnOw6xw3zB/wc4bIII\
\>"]]
}, Open  ]]
},
WindowSize->{1272, 683},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 2174, 82, 83, "Input"],
Cell[2744, 106, 2041, 81, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4822, 192, 207, 4, 31, "Input"],
Cell[5032, 198, 2309, 88, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7378, 291, 125, 2, 31, "Input"],
Cell[7506, 295, 601, 17, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8144, 317, 1775, 71, 47, "Input"],
Cell[9922, 390, 1702, 70, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11661, 465, 211, 4, 31, "Input"],
Cell[11875, 471, 1987, 78, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13899, 554, 126, 2, 31, "Input"],
Cell[14028, 558, 573, 16, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14638, 579, 1868, 72, 47, "Input"],
Cell[16509, 653, 1783, 72, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18329, 730, 200, 4, 31, "Input"],
Cell[18532, 736, 1979, 78, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20548, 819, 122, 2, 31, "Input"],
Cell[20673, 823, 571, 16, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21281, 844, 1667, 67, 47, "Input"],
Cell[22951, 913, 1624, 67, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24612, 985, 211, 4, 31, "Input"],
Cell[24826, 991, 1828, 73, 126, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26691, 1069, 123, 2, 31, "Input"],
Cell[26817, 1073, 555, 14, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27409, 1092, 326, 8, 31, "Input"],
Cell[27738, 1102, 506, 13, 30, "Output"]
}, Open  ]],
Cell[28259, 1118, 667, 17, 31, "Input"],
Cell[CellGroupData[{
Cell[28951, 1139, 212, 4, 31, "Input"],
Cell[29166, 1145, 7352, 275, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36555, 1425, 123, 2, 31, "Input"],
Cell[36681, 1429, 2679, 50, 348, "Output"]
}, Open  ]],
Cell[39375, 1482, 692, 17, 31, "Input"],
Cell[40070, 1501, 199, 5, 31, "Input"],
Cell[40272, 1508, 3231, 91, 72, "Input"],
Cell[CellGroupData[{
Cell[43528, 1603, 126, 2, 31, "Input"],
Cell[43657, 1607, 1236, 22, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44930, 1634, 1207, 36, 31, "Input"],
Cell[46140, 1672, 1302, 38, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47479, 1715, 514, 16, 31, "Input"],
Cell[47996, 1733, 592, 17, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48625, 1755, 125, 2, 31, "Input"],
Cell[48753, 1759, 174, 4, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48964, 1768, 764, 22, 31, "Input"],
Cell[49731, 1792, 743, 21, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50511, 1818, 60, 1, 31, "Input"],
Cell[50574, 1821, 237, 5, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50848, 1831, 651, 19, 31, "Input"],
Cell[51502, 1852, 695, 18, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52234, 1875, 60, 1, 31, "Input"],
Cell[52297, 1878, 235, 5, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52569, 1888, 698, 21, 31, "Input"],
Cell[53270, 1911, 696, 19, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54003, 1935, 60, 1, 31, "Input"],
Cell[54066, 1938, 239, 5, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54342, 1948, 306, 8, 31, "Input"],
Cell[54651, 1958, 337, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55025, 1971, 356, 9, 31, "Input"],
Cell[55384, 1982, 277, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55698, 1994, 1011, 26, 52, "Input"],
Cell[56712, 2022, 552, 14, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57301, 2041, 802, 23, 52, "Input"],
Cell[58106, 2066, 248, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58391, 2078, 802, 23, 52, "Input"],
Cell[59196, 2103, 547, 14, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59780, 2122, 964, 27, 52, "Input"],
Cell[60747, 2151, 725, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61509, 2174, 1069, 28, 72, "Input"],
Cell[62581, 2204, 1065, 24, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63683, 2233, 1437, 34, 132, "Input"],
Cell[65123, 2269, 298, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65458, 2281, 982, 27, 72, "Input"],
Cell[66443, 2310, 929, 21, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67409, 2336, 932, 26, 72, "Input"],
Cell[68344, 2364, 901, 20, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69282, 2389, 932, 26, 31, "Input"],
Cell[70217, 2417, 928, 21, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71182, 2443, 808, 23, 52, "Input"],
Cell[71993, 2468, 711, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72741, 2491, 812, 23, 52, "Input"],
Cell[73556, 2516, 737, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74330, 2539, 811, 23, 52, "Input"],
Cell[75144, 2564, 734, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75915, 2587, 933, 26, 72, "Input"],
Cell[76851, 2615, 969, 24, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77857, 2644, 893, 25, 72, "Input"],
Cell[78753, 2671, 203, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78993, 2681, 847, 24, 72, "Input"],
Cell[79843, 2707, 202, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80082, 2717, 843, 24, 72, "Input"],
Cell[80928, 2743, 182, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81147, 2753, 686, 19, 52, "Input"],
Cell[81836, 2774, 205, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82078, 2784, 613, 17, 52, "Input"],
Cell[82694, 2803, 185, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82916, 2813, 566, 16, 52, "Input"],
Cell[83485, 2831, 184, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83706, 2841, 1184, 31, 72, "Input"],
Cell[84893, 2874, 898, 22, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85828, 2901, 1020, 28, 72, "Input"],
Cell[86851, 2931, 873, 22, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87761, 2958, 1023, 28, 72, "Input"],
Cell[88787, 2988, 831, 20, 69, "Output"]
}, Open  ]],
Cell[89633, 3011, 143, 3, 31, "Input"],
Cell[89779, 3016, 2136, 53, 152, "Input"],
Cell[91918, 3071, 1901, 50, 152, "Input"],
Cell[93822, 3123, 1904, 50, 152, "Input"],
Cell[95729, 3175, 1904, 50, 152, "Input"],
Cell[CellGroupData[{
Cell[97658, 3229, 735, 17, 52, "Input"],
Cell[98396, 3248, 225138, 3670, 475, 190166, 3095, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
